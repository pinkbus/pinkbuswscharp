#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CoachStationManager")]
public partial class CoachStationDataClassesDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertBOOKING_PERSON(BOOKING_PERSON instance);
  partial void UpdateBOOKING_PERSON(BOOKING_PERSON instance);
  partial void DeleteBOOKING_PERSON(BOOKING_PERSON instance);
  partial void InsertTIMETABLE(TIMETABLE instance);
  partial void UpdateTIMETABLE(TIMETABLE instance);
  partial void DeleteTIMETABLE(TIMETABLE instance);
  partial void InsertBRAND_OFFICE(BRAND_OFFICE instance);
  partial void UpdateBRAND_OFFICE(BRAND_OFFICE instance);
  partial void DeleteBRAND_OFFICE(BRAND_OFFICE instance);
  partial void InsertCOACH(COACH instance);
  partial void UpdateCOACH(COACH instance);
  partial void DeleteCOACH(COACH instance);
  partial void InsertCOACH_ROUTE(COACH_ROUTE instance);
  partial void UpdateCOACH_ROUTE(COACH_ROUTE instance);
  partial void DeleteCOACH_ROUTE(COACH_ROUTE instance);
  partial void InsertCOACH_STATION(COACH_STATION instance);
  partial void UpdateCOACH_STATION(COACH_STATION instance);
  partial void DeleteCOACH_STATION(COACH_STATION instance);
  partial void InsertEMPLOYEE(EMPLOYEE instance);
  partial void UpdateEMPLOYEE(EMPLOYEE instance);
  partial void DeleteEMPLOYEE(EMPLOYEE instance);
  partial void InsertITINERARY(ITINERARY instance);
  partial void UpdateITINERARY(ITINERARY instance);
  partial void DeleteITINERARY(ITINERARY instance);
  partial void InsertPASSENGER_TRANSPORT_CO(PASSENGER_TRANSPORT_CO instance);
  partial void UpdatePASSENGER_TRANSPORT_CO(PASSENGER_TRANSPORT_CO instance);
  partial void DeletePASSENGER_TRANSPORT_CO(PASSENGER_TRANSPORT_CO instance);
  partial void InsertPAYMENT(PAYMENT instance);
  partial void UpdatePAYMENT(PAYMENT instance);
  partial void DeletePAYMENT(PAYMENT instance);
  partial void InsertSEAT(SEAT instance);
  partial void UpdateSEAT(SEAT instance);
  partial void DeleteSEAT(SEAT instance);
  partial void InsertTICKET(TICKET instance);
  partial void UpdateTICKET(TICKET instance);
  partial void DeleteTICKET(TICKET instance);
  partial void InsertTICKET_ORDER(TICKET_ORDER instance);
  partial void UpdateTICKET_ORDER(TICKET_ORDER instance);
  partial void DeleteTICKET_ORDER(TICKET_ORDER instance);
  #endregion
	
	public CoachStationDataClassesDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["CoachStationManagerConnectionString1"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public CoachStationDataClassesDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public CoachStationDataClassesDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public CoachStationDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public CoachStationDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<BOOKING_PERSON> BOOKING_PERSONs
	{
		get
		{
			return this.GetTable<BOOKING_PERSON>();
		}
	}
	
	public System.Data.Linq.Table<TIMETABLE> TIMETABLEs
	{
		get
		{
			return this.GetTable<TIMETABLE>();
		}
	}
	
	public System.Data.Linq.Table<BRAND_OFFICE> BRAND_OFFICEs
	{
		get
		{
			return this.GetTable<BRAND_OFFICE>();
		}
	}
	
	public System.Data.Linq.Table<COACH> COACHes
	{
		get
		{
			return this.GetTable<COACH>();
		}
	}
	
	public System.Data.Linq.Table<COACH_ROUTE> COACH_ROUTEs
	{
		get
		{
			return this.GetTable<COACH_ROUTE>();
		}
	}
	
	public System.Data.Linq.Table<COACH_STATION> COACH_STATIONs
	{
		get
		{
			return this.GetTable<COACH_STATION>();
		}
	}
	
	public System.Data.Linq.Table<EMPLOYEE> EMPLOYEEs
	{
		get
		{
			return this.GetTable<EMPLOYEE>();
		}
	}
	
	public System.Data.Linq.Table<ITINERARY> ITINERARies
	{
		get
		{
			return this.GetTable<ITINERARY>();
		}
	}
	
	public System.Data.Linq.Table<PASSENGER_TRANSPORT_CO> PASSENGER_TRANSPORT_COs
	{
		get
		{
			return this.GetTable<PASSENGER_TRANSPORT_CO>();
		}
	}
	
	public System.Data.Linq.Table<PAYMENT> PAYMENTs
	{
		get
		{
			return this.GetTable<PAYMENT>();
		}
	}
	
	public System.Data.Linq.Table<SEAT> SEATs
	{
		get
		{
			return this.GetTable<SEAT>();
		}
	}
	
	public System.Data.Linq.Table<TICKET> TICKETs
	{
		get
		{
			return this.GetTable<TICKET>();
		}
	}
	
	public System.Data.Linq.Table<TICKET_ORDER> TICKET_ORDERs
	{
		get
		{
			return this.GetTable<TICKET_ORDER>();
		}
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.proFROM_CITY")]
	public ISingleResult<proFROM_CITYResult> proFROM_CITY()
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
		return ((ISingleResult<proFROM_CITYResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.proTO_CITY")]
	public ISingleResult<proTO_CITYResult> proTO_CITY([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string city_name)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), city_name);
		return ((ISingleResult<proTO_CITYResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.proBOARDING_LIST")]
	public ISingleResult<proBOARDING_LISTResult> proBOARDING_LIST([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(10)")] string coach_route_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string company_name)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), coach_route_id, company_name);
		return ((ISingleResult<proBOARDING_LISTResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.proDROPPING_LIST")]
	public ISingleResult<proDROPPING_LISTResult> proDROPPING_LIST([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(10)")] string coach_route_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string company_name)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), coach_route_id, company_name);
		return ((ISingleResult<proDROPPING_LISTResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.proROUTE_COACH_TO_LIST")]
	public ISingleResult<proROUTE_COACH_TO_LISTResult> proROUTE_COACH_TO_LIST([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string from, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string to, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(15)")] string dp_date)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), from, to, dp_date);
		return ((ISingleResult<proROUTE_COACH_TO_LISTResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.proLOGIN")]
	public ISingleResult<proLOGINResult> proLOGIN([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string pass)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), email, pass);
		return ((ISingleResult<proLOGINResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.proSIGNUP")]
	public ISingleResult<proSIGNUPResult> proSIGNUP([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(15)")] string tel, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(30)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(16)")] string password)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), email, tel, name, password);
		return ((ISingleResult<proSIGNUPResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.proUPDATE_STATUS_TICKET")]
	public ISingleResult<proUPDATE_STATUS_TICKETResult> proUPDATE_STATUS_TICKET([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> ticket_id)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ticket_id);
		return ((ISingleResult<proUPDATE_STATUS_TICKETResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.proTICKET_BOOKING")]
	public ISingleResult<proTICKET_BOOKINGResult> proTICKET_BOOKING([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(12)")] string tel, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(40)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(10)")] string dpt_date, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string boarding, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string dropping, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(3)")] string seat_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(10)")] string coach_route_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string order_id)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tel, name, dpt_date, boarding, dropping, seat_id, coach_route_id, email, order_id);
		return ((ISingleResult<proTICKET_BOOKINGResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.proUPDATE_PAYMENT")]
	public ISingleResult<proUPDATE_PAYMENTResult> proUPDATE_PAYMENT([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string order_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(10)")] string payment_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> ticket_id)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), order_id, payment_id, ticket_id);
		return ((ISingleResult<proUPDATE_PAYMENTResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.proTICKET_ORDER_LIST")]
	public ISingleResult<proTICKET_ORDER_LISTResult> proTICKET_ORDER_LIST([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string order_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(30)")] string email)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), order_id, email);
		return ((ISingleResult<proTICKET_ORDER_LISTResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.proDELETE_TICKET")]
	public ISingleResult<proDELETE_TICKETResult> proDELETE_TICKET([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> ticket_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string email)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ticket_id, email);
		return ((ISingleResult<proDELETE_TICKETResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.proSEAT_TO_LIST")]
	public ISingleResult<proSEAT_TO_LISTResult> proSEAT_TO_LIST([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string from, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string to, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(15)")] string dpt_date, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(10)")] string route_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(10)")] string company_id)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), from, to, dpt_date, route_id, company_id);
		return ((ISingleResult<proSEAT_TO_LISTResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.proCOACHSTATIONGetTOList")]
	public ISingleResult<proCOACHSTATIONGetTOListResult> proCOACHSTATIONGetTOList()
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
		return ((ISingleResult<proCOACHSTATIONGetTOListResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.proCOACHSTATIONInsert")]
	public ISingleResult<proCOACHSTATIONInsertResult> proCOACHSTATIONInsert([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(10)")] string id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string address, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(12)")] string tel, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Image")] Byte[] pic, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(30)")] string city)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, name, address, tel, pic, city);
		return ((ISingleResult<proCOACHSTATIONInsertResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.proGetListOfficebyCoachStation")]
	public ISingleResult<proGetListOfficebyCoachStationResult> proGetListOfficebyCoachStation([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(10)")] string coachstation)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), coachstation);
		return ((ISingleResult<proGetListOfficebyCoachStationResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.proGetListOfficebyCompany")]
	public ISingleResult<proGetListOfficebyCompanyResult> proGetListOfficebyCompany([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(10)")] string company)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), company);
		return ((ISingleResult<proGetListOfficebyCompanyResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.proINSERT_BRAND_OFFICE")]
	public ISingleResult<proINSERT_BRAND_OFFICEResult> proINSERT_BRAND_OFFICE([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(10)")] string coachstationid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(10)")] string companyid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(70)")] string officename, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(13)")] string officetel, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Image")] Byte[] office_picture)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), coachstationid, companyid, officename, officetel, office_picture);
		return ((ISingleResult<proINSERT_BRAND_OFFICEResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.proCOACHGetTOList")]
	public ISingleResult<proCOACHGetTOListResult> proCOACHGetTOList()
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
		return ((ISingleResult<proCOACHGetTOListResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.proCOACHInsert")]
	public ISingleResult<proCOACHInsertResult> proCOACHInsert([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(10)")] string bienso, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string loaixe, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> tongghe, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> fee)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), bienso, loaixe, tongghe, fee);
		return ((ISingleResult<proCOACHInsertResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.proCOACHROUTEInsert")]
	public ISingleResult<proCOACHROUTEInsertResult> proCOACHROUTEInsert([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(10)")] string routeid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string routename, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> price, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(5)")] string start_time, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> route_time)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), routeid, routename, price, start_time, route_time);
		return ((ISingleResult<proCOACHROUTEInsertResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.proCOACHROUTEList")]
	public ISingleResult<proCOACHROUTEListResult> proCOACHROUTEList()
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
		return ((ISingleResult<proCOACHROUTEListResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.proITINERARYListbyCOACHROUTE")]
	public ISingleResult<proITINERARYListbyCOACHROUTEResult> proITINERARYListbyCOACHROUTE([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(10)")] string idroute)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idroute);
		return ((ISingleResult<proITINERARYListbyCOACHROUTEResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.proITINERARYInsert")]
	public ISingleResult<proITINERARYInsertResult> proITINERARYInsert([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(10)")] string id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(30)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string startpoint, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(6)")] string starttime, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string endpoint, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(10)")] string endtime)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, name, startpoint, starttime, endpoint, endtime);
		return ((ISingleResult<proITINERARYInsertResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.proGET_LIST_COMPANY")]
	public ISingleResult<proGET_LIST_COMPANYResult> proGET_LIST_COMPANY()
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
		return ((ISingleResult<proGET_LIST_COMPANYResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.proINSERT_COMPANY")]
	public int proINSERT_COMPANY([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(10)")] string id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(13)")] string tel, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Image")] Byte[] image)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, name, tel, image);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.proTIMETABLEGetTOList")]
	public ISingleResult<proTIMETABLEGetTOListResult> proTIMETABLEGetTOList()
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
		return ((ISingleResult<proTIMETABLEGetTOListResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.proUPDATE_TIMETABLE")]
	public int proUPDATE_TIMETABLE([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(10)")] string companyid)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), companyid);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.proLOGINForEMPLOYEE")]
	public ISingleResult<proLOGINForEMPLOYEEResult> proLOGINForEMPLOYEE([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string matkhau, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(10)")] string company)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username, matkhau, company);
		return ((ISingleResult<proLOGINForEMPLOYEEResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.proEMPLOYEEInsert")]
	public ISingleResult<proEMPLOYEEInsertResult> proEMPLOYEEInsert([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(10)")] string id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(12)")] string tel, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string vitri, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Image")] Byte[] pic, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(10)")] string nhaxe, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(10)")] string plate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string pass)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, name, tel, vitri, pic, nhaxe, plate, pass);
		return ((ISingleResult<proEMPLOYEEInsertResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.proUPDATE_EMPLOYEE")]
	public int proUPDATE_EMPLOYEE([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(10)")] string id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Image")] Byte[] image, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(10)")] string plate)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, image, plate);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.proEMPLOYEEListbyCOMPANY")]
	public ISingleResult<proEMPLOYEEListbyCOMPANYResult> proEMPLOYEEListbyCOMPANY([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(10)")] string stationofficeid)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), stationofficeid);
		return ((ISingleResult<proEMPLOYEEListbyCOMPANYResult>)(result.ReturnValue));
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BOOKING_PERSON")]
public partial class BOOKING_PERSON : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _EMAIL;
	
	private string _BOOKING_PERSON_TEL;
	
	private string _BOOKING_PERSON_NAME;
	
	private string _PASSWORD;
	
	private EntitySet<TICKET_ORDER> _TICKET_ORDERs;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnBOOKING_PERSON_TELChanging(string value);
    partial void OnBOOKING_PERSON_TELChanged();
    partial void OnBOOKING_PERSON_NAMEChanging(string value);
    partial void OnBOOKING_PERSON_NAMEChanged();
    partial void OnPASSWORDChanging(string value);
    partial void OnPASSWORDChanged();
    #endregion
	
	public BOOKING_PERSON()
	{
		this._TICKET_ORDERs = new EntitySet<TICKET_ORDER>(new Action<TICKET_ORDER>(this.attach_TICKET_ORDERs), new Action<TICKET_ORDER>(this.detach_TICKET_ORDERs));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string EMAIL
	{
		get
		{
			return this._EMAIL;
		}
		set
		{
			if ((this._EMAIL != value))
			{
				this.OnEMAILChanging(value);
				this.SendPropertyChanging();
				this._EMAIL = value;
				this.SendPropertyChanged("EMAIL");
				this.OnEMAILChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BOOKING_PERSON_TEL", DbType="NVarChar(12) NOT NULL", CanBeNull=false)]
	public string BOOKING_PERSON_TEL
	{
		get
		{
			return this._BOOKING_PERSON_TEL;
		}
		set
		{
			if ((this._BOOKING_PERSON_TEL != value))
			{
				this.OnBOOKING_PERSON_TELChanging(value);
				this.SendPropertyChanging();
				this._BOOKING_PERSON_TEL = value;
				this.SendPropertyChanged("BOOKING_PERSON_TEL");
				this.OnBOOKING_PERSON_TELChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BOOKING_PERSON_NAME", DbType="NVarChar(50)")]
	public string BOOKING_PERSON_NAME
	{
		get
		{
			return this._BOOKING_PERSON_NAME;
		}
		set
		{
			if ((this._BOOKING_PERSON_NAME != value))
			{
				this.OnBOOKING_PERSON_NAMEChanging(value);
				this.SendPropertyChanging();
				this._BOOKING_PERSON_NAME = value;
				this.SendPropertyChanged("BOOKING_PERSON_NAME");
				this.OnBOOKING_PERSON_NAMEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PASSWORD", DbType="NVarChar(12)")]
	public string PASSWORD
	{
		get
		{
			return this._PASSWORD;
		}
		set
		{
			if ((this._PASSWORD != value))
			{
				this.OnPASSWORDChanging(value);
				this.SendPropertyChanging();
				this._PASSWORD = value;
				this.SendPropertyChanged("PASSWORD");
				this.OnPASSWORDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BOOKING_PERSON_TICKET_ORDER", Storage="_TICKET_ORDERs", ThisKey="EMAIL", OtherKey="EMAIL")]
	public EntitySet<TICKET_ORDER> TICKET_ORDERs
	{
		get
		{
			return this._TICKET_ORDERs;
		}
		set
		{
			this._TICKET_ORDERs.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_TICKET_ORDERs(TICKET_ORDER entity)
	{
		this.SendPropertyChanging();
		entity.BOOKING_PERSON = this;
	}
	
	private void detach_TICKET_ORDERs(TICKET_ORDER entity)
	{
		this.SendPropertyChanging();
		entity.BOOKING_PERSON = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TIMETABLE")]
public partial class TIMETABLE : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _EMPLOYEE_ID;
	
	private string _LICENSE_PLATE;
	
	private string _COACH_ROUTE_ID;
	
	private string _FINSHED_STATUS;
	
	private string _DEPARTURE_DATE;
	
	private EntityRef<COACH> _COACH;
	
	private EntityRef<COACH_ROUTE> _COACH_ROUTE;
	
	private EntityRef<EMPLOYEE> _EMPLOYEE;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEMPLOYEE_IDChanging(string value);
    partial void OnEMPLOYEE_IDChanged();
    partial void OnLICENSE_PLATEChanging(string value);
    partial void OnLICENSE_PLATEChanged();
    partial void OnCOACH_ROUTE_IDChanging(string value);
    partial void OnCOACH_ROUTE_IDChanged();
    partial void OnFINSHED_STATUSChanging(string value);
    partial void OnFINSHED_STATUSChanged();
    partial void OnDEPARTURE_DATEChanging(string value);
    partial void OnDEPARTURE_DATEChanged();
    #endregion
	
	public TIMETABLE()
	{
		this._COACH = default(EntityRef<COACH>);
		this._COACH_ROUTE = default(EntityRef<COACH_ROUTE>);
		this._EMPLOYEE = default(EntityRef<EMPLOYEE>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMPLOYEE_ID", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string EMPLOYEE_ID
	{
		get
		{
			return this._EMPLOYEE_ID;
		}
		set
		{
			if ((this._EMPLOYEE_ID != value))
			{
				if (this._EMPLOYEE.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnEMPLOYEE_IDChanging(value);
				this.SendPropertyChanging();
				this._EMPLOYEE_ID = value;
				this.SendPropertyChanged("EMPLOYEE_ID");
				this.OnEMPLOYEE_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LICENSE_PLATE", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string LICENSE_PLATE
	{
		get
		{
			return this._LICENSE_PLATE;
		}
		set
		{
			if ((this._LICENSE_PLATE != value))
			{
				if (this._COACH.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnLICENSE_PLATEChanging(value);
				this.SendPropertyChanging();
				this._LICENSE_PLATE = value;
				this.SendPropertyChanged("LICENSE_PLATE");
				this.OnLICENSE_PLATEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COACH_ROUTE_ID", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string COACH_ROUTE_ID
	{
		get
		{
			return this._COACH_ROUTE_ID;
		}
		set
		{
			if ((this._COACH_ROUTE_ID != value))
			{
				if (this._COACH_ROUTE.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCOACH_ROUTE_IDChanging(value);
				this.SendPropertyChanging();
				this._COACH_ROUTE_ID = value;
				this.SendPropertyChanged("COACH_ROUTE_ID");
				this.OnCOACH_ROUTE_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FINSHED_STATUS", DbType="VarChar(20)")]
	public string FINSHED_STATUS
	{
		get
		{
			return this._FINSHED_STATUS;
		}
		set
		{
			if ((this._FINSHED_STATUS != value))
			{
				this.OnFINSHED_STATUSChanging(value);
				this.SendPropertyChanging();
				this._FINSHED_STATUS = value;
				this.SendPropertyChanged("FINSHED_STATUS");
				this.OnFINSHED_STATUSChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEPARTURE_DATE", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
	public string DEPARTURE_DATE
	{
		get
		{
			return this._DEPARTURE_DATE;
		}
		set
		{
			if ((this._DEPARTURE_DATE != value))
			{
				this.OnDEPARTURE_DATEChanging(value);
				this.SendPropertyChanging();
				this._DEPARTURE_DATE = value;
				this.SendPropertyChanged("DEPARTURE_DATE");
				this.OnDEPARTURE_DATEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COACH_TIMETABLE", Storage="_COACH", ThisKey="LICENSE_PLATE", OtherKey="LICENSE_PLATE", IsForeignKey=true)]
	public COACH COACH
	{
		get
		{
			return this._COACH.Entity;
		}
		set
		{
			COACH previousValue = this._COACH.Entity;
			if (((previousValue != value) 
						|| (this._COACH.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._COACH.Entity = null;
					previousValue.TIMETABLEs.Remove(this);
				}
				this._COACH.Entity = value;
				if ((value != null))
				{
					value.TIMETABLEs.Add(this);
					this._LICENSE_PLATE = value.LICENSE_PLATE;
				}
				else
				{
					this._LICENSE_PLATE = default(string);
				}
				this.SendPropertyChanged("COACH");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COACH_ROUTE_TIMETABLE", Storage="_COACH_ROUTE", ThisKey="COACH_ROUTE_ID", OtherKey="COACH_ROUTE_ID", IsForeignKey=true)]
	public COACH_ROUTE COACH_ROUTE
	{
		get
		{
			return this._COACH_ROUTE.Entity;
		}
		set
		{
			COACH_ROUTE previousValue = this._COACH_ROUTE.Entity;
			if (((previousValue != value) 
						|| (this._COACH_ROUTE.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._COACH_ROUTE.Entity = null;
					previousValue.TIMETABLEs.Remove(this);
				}
				this._COACH_ROUTE.Entity = value;
				if ((value != null))
				{
					value.TIMETABLEs.Add(this);
					this._COACH_ROUTE_ID = value.COACH_ROUTE_ID;
				}
				else
				{
					this._COACH_ROUTE_ID = default(string);
				}
				this.SendPropertyChanged("COACH_ROUTE");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMPLOYEE_TIMETABLE", Storage="_EMPLOYEE", ThisKey="EMPLOYEE_ID", OtherKey="EMPLOYEE_ID", IsForeignKey=true)]
	public EMPLOYEE EMPLOYEE
	{
		get
		{
			return this._EMPLOYEE.Entity;
		}
		set
		{
			EMPLOYEE previousValue = this._EMPLOYEE.Entity;
			if (((previousValue != value) 
						|| (this._EMPLOYEE.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._EMPLOYEE.Entity = null;
					previousValue.TIMETABLEs.Remove(this);
				}
				this._EMPLOYEE.Entity = value;
				if ((value != null))
				{
					value.TIMETABLEs.Add(this);
					this._EMPLOYEE_ID = value.EMPLOYEE_ID;
				}
				else
				{
					this._EMPLOYEE_ID = default(string);
				}
				this.SendPropertyChanged("EMPLOYEE");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BRAND_OFFICE")]
public partial class BRAND_OFFICE : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _COACH_STATION_ID;
	
	private string _COMPANY_ID;
	
	private string _OFFICE_NAME;
	
	private string _OFFICE_TEL;
	
	private Byte[] _OFFICE_PICTURE;
	
	private EntityRef<COACH_STATION> _COACH_STATION;
	
	private EntityRef<PASSENGER_TRANSPORT_CO> _PASSENGER_TRANSPORT_CO;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCOACH_STATION_IDChanging(string value);
    partial void OnCOACH_STATION_IDChanged();
    partial void OnCOMPANY_IDChanging(string value);
    partial void OnCOMPANY_IDChanged();
    partial void OnOFFICE_NAMEChanging(string value);
    partial void OnOFFICE_NAMEChanged();
    partial void OnOFFICE_TELChanging(string value);
    partial void OnOFFICE_TELChanged();
    partial void OnOFFICE_PICTUREChanging(Byte[] value);
    partial void OnOFFICE_PICTUREChanged();
    #endregion
	
	public BRAND_OFFICE()
	{
		this._COACH_STATION = default(EntityRef<COACH_STATION>);
		this._PASSENGER_TRANSPORT_CO = default(EntityRef<PASSENGER_TRANSPORT_CO>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COACH_STATION_ID", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string COACH_STATION_ID
	{
		get
		{
			return this._COACH_STATION_ID;
		}
		set
		{
			if ((this._COACH_STATION_ID != value))
			{
				if (this._COACH_STATION.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCOACH_STATION_IDChanging(value);
				this.SendPropertyChanging();
				this._COACH_STATION_ID = value;
				this.SendPropertyChanged("COACH_STATION_ID");
				this.OnCOACH_STATION_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMPANY_ID", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string COMPANY_ID
	{
		get
		{
			return this._COMPANY_ID;
		}
		set
		{
			if ((this._COMPANY_ID != value))
			{
				if (this._PASSENGER_TRANSPORT_CO.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCOMPANY_IDChanging(value);
				this.SendPropertyChanging();
				this._COMPANY_ID = value;
				this.SendPropertyChanged("COMPANY_ID");
				this.OnCOMPANY_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OFFICE_NAME", DbType="NVarChar(30)")]
	public string OFFICE_NAME
	{
		get
		{
			return this._OFFICE_NAME;
		}
		set
		{
			if ((this._OFFICE_NAME != value))
			{
				this.OnOFFICE_NAMEChanging(value);
				this.SendPropertyChanging();
				this._OFFICE_NAME = value;
				this.SendPropertyChanged("OFFICE_NAME");
				this.OnOFFICE_NAMEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OFFICE_TEL", DbType="VarChar(12)")]
	public string OFFICE_TEL
	{
		get
		{
			return this._OFFICE_TEL;
		}
		set
		{
			if ((this._OFFICE_TEL != value))
			{
				this.OnOFFICE_TELChanging(value);
				this.SendPropertyChanging();
				this._OFFICE_TEL = value;
				this.SendPropertyChanged("OFFICE_TEL");
				this.OnOFFICE_TELChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OFFICE_PICTURE", DbType="Image", UpdateCheck=UpdateCheck.Never)]
	public Byte[] OFFICE_PICTURE
	{
		get
		{
			return this._OFFICE_PICTURE;
		}
		set
		{
			if ((this._OFFICE_PICTURE != value))
			{
				this.OnOFFICE_PICTUREChanging(value);
				this.SendPropertyChanging();
				this._OFFICE_PICTURE = value;
				this.SendPropertyChanged("OFFICE_PICTURE");
				this.OnOFFICE_PICTUREChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COACH_STATION_BRAND_OFFICE", Storage="_COACH_STATION", ThisKey="COACH_STATION_ID", OtherKey="COACH_STATION_ID", IsForeignKey=true)]
	public COACH_STATION COACH_STATION
	{
		get
		{
			return this._COACH_STATION.Entity;
		}
		set
		{
			COACH_STATION previousValue = this._COACH_STATION.Entity;
			if (((previousValue != value) 
						|| (this._COACH_STATION.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._COACH_STATION.Entity = null;
					previousValue.BRAND_OFFICEs.Remove(this);
				}
				this._COACH_STATION.Entity = value;
				if ((value != null))
				{
					value.BRAND_OFFICEs.Add(this);
					this._COACH_STATION_ID = value.COACH_STATION_ID;
				}
				else
				{
					this._COACH_STATION_ID = default(string);
				}
				this.SendPropertyChanged("COACH_STATION");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PASSENGER_TRANSPORT_CO_BRAND_OFFICE", Storage="_PASSENGER_TRANSPORT_CO", ThisKey="COMPANY_ID", OtherKey="COMPANY_ID", IsForeignKey=true)]
	public PASSENGER_TRANSPORT_CO PASSENGER_TRANSPORT_CO
	{
		get
		{
			return this._PASSENGER_TRANSPORT_CO.Entity;
		}
		set
		{
			PASSENGER_TRANSPORT_CO previousValue = this._PASSENGER_TRANSPORT_CO.Entity;
			if (((previousValue != value) 
						|| (this._PASSENGER_TRANSPORT_CO.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._PASSENGER_TRANSPORT_CO.Entity = null;
					previousValue.BRAND_OFFICEs.Remove(this);
				}
				this._PASSENGER_TRANSPORT_CO.Entity = value;
				if ((value != null))
				{
					value.BRAND_OFFICEs.Add(this);
					this._COMPANY_ID = value.COMPANY_ID;
				}
				else
				{
					this._COMPANY_ID = default(string);
				}
				this.SendPropertyChanged("PASSENGER_TRANSPORT_CO");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.COACH")]
public partial class COACH : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _LICENSE_PLATE;
	
	private string _TYPE_SEAT;
	
	private System.Nullable<int> _TOTAL_SEATS;
	
	private System.Nullable<int> _EXTRA_FEE;
	
	private EntitySet<TIMETABLE> _TIMETABLEs;
	
	private EntitySet<SEAT> _SEATs;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLICENSE_PLATEChanging(string value);
    partial void OnLICENSE_PLATEChanged();
    partial void OnTYPE_SEATChanging(string value);
    partial void OnTYPE_SEATChanged();
    partial void OnTOTAL_SEATSChanging(System.Nullable<int> value);
    partial void OnTOTAL_SEATSChanged();
    partial void OnEXTRA_FEEChanging(System.Nullable<int> value);
    partial void OnEXTRA_FEEChanged();
    #endregion
	
	public COACH()
	{
		this._TIMETABLEs = new EntitySet<TIMETABLE>(new Action<TIMETABLE>(this.attach_TIMETABLEs), new Action<TIMETABLE>(this.detach_TIMETABLEs));
		this._SEATs = new EntitySet<SEAT>(new Action<SEAT>(this.attach_SEATs), new Action<SEAT>(this.detach_SEATs));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LICENSE_PLATE", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string LICENSE_PLATE
	{
		get
		{
			return this._LICENSE_PLATE;
		}
		set
		{
			if ((this._LICENSE_PLATE != value))
			{
				this.OnLICENSE_PLATEChanging(value);
				this.SendPropertyChanging();
				this._LICENSE_PLATE = value;
				this.SendPropertyChanged("LICENSE_PLATE");
				this.OnLICENSE_PLATEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYPE_SEAT", DbType="NVarChar(10)")]
	public string TYPE_SEAT
	{
		get
		{
			return this._TYPE_SEAT;
		}
		set
		{
			if ((this._TYPE_SEAT != value))
			{
				this.OnTYPE_SEATChanging(value);
				this.SendPropertyChanging();
				this._TYPE_SEAT = value;
				this.SendPropertyChanged("TYPE_SEAT");
				this.OnTYPE_SEATChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL_SEATS", DbType="Int")]
	public System.Nullable<int> TOTAL_SEATS
	{
		get
		{
			return this._TOTAL_SEATS;
		}
		set
		{
			if ((this._TOTAL_SEATS != value))
			{
				this.OnTOTAL_SEATSChanging(value);
				this.SendPropertyChanging();
				this._TOTAL_SEATS = value;
				this.SendPropertyChanged("TOTAL_SEATS");
				this.OnTOTAL_SEATSChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EXTRA_FEE", DbType="Int")]
	public System.Nullable<int> EXTRA_FEE
	{
		get
		{
			return this._EXTRA_FEE;
		}
		set
		{
			if ((this._EXTRA_FEE != value))
			{
				this.OnEXTRA_FEEChanging(value);
				this.SendPropertyChanging();
				this._EXTRA_FEE = value;
				this.SendPropertyChanged("EXTRA_FEE");
				this.OnEXTRA_FEEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COACH_TIMETABLE", Storage="_TIMETABLEs", ThisKey="LICENSE_PLATE", OtherKey="LICENSE_PLATE")]
	public EntitySet<TIMETABLE> TIMETABLEs
	{
		get
		{
			return this._TIMETABLEs;
		}
		set
		{
			this._TIMETABLEs.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COACH_SEAT", Storage="_SEATs", ThisKey="LICENSE_PLATE", OtherKey="LICENSE_PLATE")]
	public EntitySet<SEAT> SEATs
	{
		get
		{
			return this._SEATs;
		}
		set
		{
			this._SEATs.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_TIMETABLEs(TIMETABLE entity)
	{
		this.SendPropertyChanging();
		entity.COACH = this;
	}
	
	private void detach_TIMETABLEs(TIMETABLE entity)
	{
		this.SendPropertyChanging();
		entity.COACH = null;
	}
	
	private void attach_SEATs(SEAT entity)
	{
		this.SendPropertyChanging();
		entity.COACH = this;
	}
	
	private void detach_SEATs(SEAT entity)
	{
		this.SendPropertyChanging();
		entity.COACH = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.COACH_ROUTE")]
public partial class COACH_ROUTE : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _COACH_ROUTE_ID;
	
	private string _COACH_ROUTE_NAME;
	
	private System.Nullable<int> _COACH_ROUTE_PRICE;
	
	private string _DEPARTURE_TIME;
	
	private System.Nullable<int> _ROUTE_TIME;
	
	private EntitySet<TIMETABLE> _TIMETABLEs;
	
	private EntitySet<ITINERARY> _ITINERARies;
	
	private EntitySet<TICKET> _TICKETs;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCOACH_ROUTE_IDChanging(string value);
    partial void OnCOACH_ROUTE_IDChanged();
    partial void OnCOACH_ROUTE_NAMEChanging(string value);
    partial void OnCOACH_ROUTE_NAMEChanged();
    partial void OnCOACH_ROUTE_PRICEChanging(System.Nullable<int> value);
    partial void OnCOACH_ROUTE_PRICEChanged();
    partial void OnDEPARTURE_TIMEChanging(string value);
    partial void OnDEPARTURE_TIMEChanged();
    partial void OnROUTE_TIMEChanging(System.Nullable<int> value);
    partial void OnROUTE_TIMEChanged();
    #endregion
	
	public COACH_ROUTE()
	{
		this._TIMETABLEs = new EntitySet<TIMETABLE>(new Action<TIMETABLE>(this.attach_TIMETABLEs), new Action<TIMETABLE>(this.detach_TIMETABLEs));
		this._ITINERARies = new EntitySet<ITINERARY>(new Action<ITINERARY>(this.attach_ITINERARies), new Action<ITINERARY>(this.detach_ITINERARies));
		this._TICKETs = new EntitySet<TICKET>(new Action<TICKET>(this.attach_TICKETs), new Action<TICKET>(this.detach_TICKETs));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COACH_ROUTE_ID", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string COACH_ROUTE_ID
	{
		get
		{
			return this._COACH_ROUTE_ID;
		}
		set
		{
			if ((this._COACH_ROUTE_ID != value))
			{
				this.OnCOACH_ROUTE_IDChanging(value);
				this.SendPropertyChanging();
				this._COACH_ROUTE_ID = value;
				this.SendPropertyChanged("COACH_ROUTE_ID");
				this.OnCOACH_ROUTE_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COACH_ROUTE_NAME", DbType="NVarChar(50)")]
	public string COACH_ROUTE_NAME
	{
		get
		{
			return this._COACH_ROUTE_NAME;
		}
		set
		{
			if ((this._COACH_ROUTE_NAME != value))
			{
				this.OnCOACH_ROUTE_NAMEChanging(value);
				this.SendPropertyChanging();
				this._COACH_ROUTE_NAME = value;
				this.SendPropertyChanged("COACH_ROUTE_NAME");
				this.OnCOACH_ROUTE_NAMEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COACH_ROUTE_PRICE", DbType="Int")]
	public System.Nullable<int> COACH_ROUTE_PRICE
	{
		get
		{
			return this._COACH_ROUTE_PRICE;
		}
		set
		{
			if ((this._COACH_ROUTE_PRICE != value))
			{
				this.OnCOACH_ROUTE_PRICEChanging(value);
				this.SendPropertyChanging();
				this._COACH_ROUTE_PRICE = value;
				this.SendPropertyChanged("COACH_ROUTE_PRICE");
				this.OnCOACH_ROUTE_PRICEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEPARTURE_TIME", DbType="VarChar(6)")]
	public string DEPARTURE_TIME
	{
		get
		{
			return this._DEPARTURE_TIME;
		}
		set
		{
			if ((this._DEPARTURE_TIME != value))
			{
				this.OnDEPARTURE_TIMEChanging(value);
				this.SendPropertyChanging();
				this._DEPARTURE_TIME = value;
				this.SendPropertyChanged("DEPARTURE_TIME");
				this.OnDEPARTURE_TIMEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROUTE_TIME", DbType="Int")]
	public System.Nullable<int> ROUTE_TIME
	{
		get
		{
			return this._ROUTE_TIME;
		}
		set
		{
			if ((this._ROUTE_TIME != value))
			{
				this.OnROUTE_TIMEChanging(value);
				this.SendPropertyChanging();
				this._ROUTE_TIME = value;
				this.SendPropertyChanged("ROUTE_TIME");
				this.OnROUTE_TIMEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COACH_ROUTE_TIMETABLE", Storage="_TIMETABLEs", ThisKey="COACH_ROUTE_ID", OtherKey="COACH_ROUTE_ID")]
	public EntitySet<TIMETABLE> TIMETABLEs
	{
		get
		{
			return this._TIMETABLEs;
		}
		set
		{
			this._TIMETABLEs.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COACH_ROUTE_ITINERARY", Storage="_ITINERARies", ThisKey="COACH_ROUTE_ID", OtherKey="COACH_ROUTE_ID")]
	public EntitySet<ITINERARY> ITINERARies
	{
		get
		{
			return this._ITINERARies;
		}
		set
		{
			this._ITINERARies.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COACH_ROUTE_TICKET", Storage="_TICKETs", ThisKey="COACH_ROUTE_ID", OtherKey="COACH_ROUTE_ID")]
	public EntitySet<TICKET> TICKETs
	{
		get
		{
			return this._TICKETs;
		}
		set
		{
			this._TICKETs.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_TIMETABLEs(TIMETABLE entity)
	{
		this.SendPropertyChanging();
		entity.COACH_ROUTE = this;
	}
	
	private void detach_TIMETABLEs(TIMETABLE entity)
	{
		this.SendPropertyChanging();
		entity.COACH_ROUTE = null;
	}
	
	private void attach_ITINERARies(ITINERARY entity)
	{
		this.SendPropertyChanging();
		entity.COACH_ROUTE = this;
	}
	
	private void detach_ITINERARies(ITINERARY entity)
	{
		this.SendPropertyChanging();
		entity.COACH_ROUTE = null;
	}
	
	private void attach_TICKETs(TICKET entity)
	{
		this.SendPropertyChanging();
		entity.COACH_ROUTE = this;
	}
	
	private void detach_TICKETs(TICKET entity)
	{
		this.SendPropertyChanging();
		entity.COACH_ROUTE = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.COACH_STATION")]
public partial class COACH_STATION : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _COACH_STATION_ID;
	
	private string _COACH_STATION_NAME;
	
	private string _COACH_STATION_ADDRESS;
	
	private string _COACH_STATION_TEL;
	
	private Byte[] _COACH_STATION_PICTURE;
	
	private string _CITY;
	
	private EntitySet<BRAND_OFFICE> _BRAND_OFFICEs;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCOACH_STATION_IDChanging(string value);
    partial void OnCOACH_STATION_IDChanged();
    partial void OnCOACH_STATION_NAMEChanging(string value);
    partial void OnCOACH_STATION_NAMEChanged();
    partial void OnCOACH_STATION_ADDRESSChanging(string value);
    partial void OnCOACH_STATION_ADDRESSChanged();
    partial void OnCOACH_STATION_TELChanging(string value);
    partial void OnCOACH_STATION_TELChanged();
    partial void OnCOACH_STATION_PICTUREChanging(Byte[] value);
    partial void OnCOACH_STATION_PICTUREChanged();
    partial void OnCITYChanging(string value);
    partial void OnCITYChanged();
    #endregion
	
	public COACH_STATION()
	{
		this._BRAND_OFFICEs = new EntitySet<BRAND_OFFICE>(new Action<BRAND_OFFICE>(this.attach_BRAND_OFFICEs), new Action<BRAND_OFFICE>(this.detach_BRAND_OFFICEs));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COACH_STATION_ID", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string COACH_STATION_ID
	{
		get
		{
			return this._COACH_STATION_ID;
		}
		set
		{
			if ((this._COACH_STATION_ID != value))
			{
				this.OnCOACH_STATION_IDChanging(value);
				this.SendPropertyChanging();
				this._COACH_STATION_ID = value;
				this.SendPropertyChanged("COACH_STATION_ID");
				this.OnCOACH_STATION_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COACH_STATION_NAME", DbType="NVarChar(50)")]
	public string COACH_STATION_NAME
	{
		get
		{
			return this._COACH_STATION_NAME;
		}
		set
		{
			if ((this._COACH_STATION_NAME != value))
			{
				this.OnCOACH_STATION_NAMEChanging(value);
				this.SendPropertyChanging();
				this._COACH_STATION_NAME = value;
				this.SendPropertyChanged("COACH_STATION_NAME");
				this.OnCOACH_STATION_NAMEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COACH_STATION_ADDRESS", DbType="NVarChar(100)")]
	public string COACH_STATION_ADDRESS
	{
		get
		{
			return this._COACH_STATION_ADDRESS;
		}
		set
		{
			if ((this._COACH_STATION_ADDRESS != value))
			{
				this.OnCOACH_STATION_ADDRESSChanging(value);
				this.SendPropertyChanging();
				this._COACH_STATION_ADDRESS = value;
				this.SendPropertyChanged("COACH_STATION_ADDRESS");
				this.OnCOACH_STATION_ADDRESSChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COACH_STATION_TEL", DbType="NVarChar(12)")]
	public string COACH_STATION_TEL
	{
		get
		{
			return this._COACH_STATION_TEL;
		}
		set
		{
			if ((this._COACH_STATION_TEL != value))
			{
				this.OnCOACH_STATION_TELChanging(value);
				this.SendPropertyChanging();
				this._COACH_STATION_TEL = value;
				this.SendPropertyChanged("COACH_STATION_TEL");
				this.OnCOACH_STATION_TELChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COACH_STATION_PICTURE", DbType="Image", UpdateCheck=UpdateCheck.Never)]
	public Byte[] COACH_STATION_PICTURE
	{
		get
		{
			return this._COACH_STATION_PICTURE;
		}
		set
		{
			if ((this._COACH_STATION_PICTURE != value))
			{
				this.OnCOACH_STATION_PICTUREChanging(value);
				this.SendPropertyChanging();
				this._COACH_STATION_PICTURE = value;
				this.SendPropertyChanged("COACH_STATION_PICTURE");
				this.OnCOACH_STATION_PICTUREChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITY", DbType="NVarChar(30)")]
	public string CITY
	{
		get
		{
			return this._CITY;
		}
		set
		{
			if ((this._CITY != value))
			{
				this.OnCITYChanging(value);
				this.SendPropertyChanging();
				this._CITY = value;
				this.SendPropertyChanged("CITY");
				this.OnCITYChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COACH_STATION_BRAND_OFFICE", Storage="_BRAND_OFFICEs", ThisKey="COACH_STATION_ID", OtherKey="COACH_STATION_ID")]
	public EntitySet<BRAND_OFFICE> BRAND_OFFICEs
	{
		get
		{
			return this._BRAND_OFFICEs;
		}
		set
		{
			this._BRAND_OFFICEs.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_BRAND_OFFICEs(BRAND_OFFICE entity)
	{
		this.SendPropertyChanging();
		entity.COACH_STATION = this;
	}
	
	private void detach_BRAND_OFFICEs(BRAND_OFFICE entity)
	{
		this.SendPropertyChanging();
		entity.COACH_STATION = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EMPLOYEE")]
public partial class EMPLOYEE : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _EMPLOYEE_ID;
	
	private string _EMPLOYEE_NAME;
	
	private string _EMPLOYEE_TEL;
	
	private string _POSITION;
	
	private Byte[] _EMPLOYEE_PICUTURE;
	
	private string _EMPLOYEE_USERNAME;
	
	private string _EMPLOYEE_PASSWORD;
	
	private string _COMPANY_ID;
	
	private EntitySet<TIMETABLE> _TIMETABLEs;
	
	private EntityRef<PASSENGER_TRANSPORT_CO> _PASSENGER_TRANSPORT_CO;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEMPLOYEE_IDChanging(string value);
    partial void OnEMPLOYEE_IDChanged();
    partial void OnEMPLOYEE_NAMEChanging(string value);
    partial void OnEMPLOYEE_NAMEChanged();
    partial void OnEMPLOYEE_TELChanging(string value);
    partial void OnEMPLOYEE_TELChanged();
    partial void OnPOSITIONChanging(string value);
    partial void OnPOSITIONChanged();
    partial void OnEMPLOYEE_PICUTUREChanging(Byte[] value);
    partial void OnEMPLOYEE_PICUTUREChanged();
    partial void OnEMPLOYEE_USERNAMEChanging(string value);
    partial void OnEMPLOYEE_USERNAMEChanged();
    partial void OnEMPLOYEE_PASSWORDChanging(string value);
    partial void OnEMPLOYEE_PASSWORDChanged();
    partial void OnCOMPANY_IDChanging(string value);
    partial void OnCOMPANY_IDChanged();
    #endregion
	
	public EMPLOYEE()
	{
		this._TIMETABLEs = new EntitySet<TIMETABLE>(new Action<TIMETABLE>(this.attach_TIMETABLEs), new Action<TIMETABLE>(this.detach_TIMETABLEs));
		this._PASSENGER_TRANSPORT_CO = default(EntityRef<PASSENGER_TRANSPORT_CO>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMPLOYEE_ID", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string EMPLOYEE_ID
	{
		get
		{
			return this._EMPLOYEE_ID;
		}
		set
		{
			if ((this._EMPLOYEE_ID != value))
			{
				this.OnEMPLOYEE_IDChanging(value);
				this.SendPropertyChanging();
				this._EMPLOYEE_ID = value;
				this.SendPropertyChanged("EMPLOYEE_ID");
				this.OnEMPLOYEE_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMPLOYEE_NAME", DbType="NVarChar(50)")]
	public string EMPLOYEE_NAME
	{
		get
		{
			return this._EMPLOYEE_NAME;
		}
		set
		{
			if ((this._EMPLOYEE_NAME != value))
			{
				this.OnEMPLOYEE_NAMEChanging(value);
				this.SendPropertyChanging();
				this._EMPLOYEE_NAME = value;
				this.SendPropertyChanged("EMPLOYEE_NAME");
				this.OnEMPLOYEE_NAMEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMPLOYEE_TEL", DbType="NVarChar(12)")]
	public string EMPLOYEE_TEL
	{
		get
		{
			return this._EMPLOYEE_TEL;
		}
		set
		{
			if ((this._EMPLOYEE_TEL != value))
			{
				this.OnEMPLOYEE_TELChanging(value);
				this.SendPropertyChanging();
				this._EMPLOYEE_TEL = value;
				this.SendPropertyChanged("EMPLOYEE_TEL");
				this.OnEMPLOYEE_TELChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POSITION", DbType="Char(10)")]
	public string POSITION
	{
		get
		{
			return this._POSITION;
		}
		set
		{
			if ((this._POSITION != value))
			{
				this.OnPOSITIONChanging(value);
				this.SendPropertyChanging();
				this._POSITION = value;
				this.SendPropertyChanged("POSITION");
				this.OnPOSITIONChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMPLOYEE_PICUTURE", DbType="Image", UpdateCheck=UpdateCheck.Never)]
	public Byte[] EMPLOYEE_PICUTURE
	{
		get
		{
			return this._EMPLOYEE_PICUTURE;
		}
		set
		{
			if ((this._EMPLOYEE_PICUTURE != value))
			{
				this.OnEMPLOYEE_PICUTUREChanging(value);
				this.SendPropertyChanging();
				this._EMPLOYEE_PICUTURE = value;
				this.SendPropertyChanged("EMPLOYEE_PICUTURE");
				this.OnEMPLOYEE_PICUTUREChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMPLOYEE_USERNAME", DbType="NVarChar(20)")]
	public string EMPLOYEE_USERNAME
	{
		get
		{
			return this._EMPLOYEE_USERNAME;
		}
		set
		{
			if ((this._EMPLOYEE_USERNAME != value))
			{
				this.OnEMPLOYEE_USERNAMEChanging(value);
				this.SendPropertyChanging();
				this._EMPLOYEE_USERNAME = value;
				this.SendPropertyChanged("EMPLOYEE_USERNAME");
				this.OnEMPLOYEE_USERNAMEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMPLOYEE_PASSWORD", DbType="NVarChar(16)")]
	public string EMPLOYEE_PASSWORD
	{
		get
		{
			return this._EMPLOYEE_PASSWORD;
		}
		set
		{
			if ((this._EMPLOYEE_PASSWORD != value))
			{
				this.OnEMPLOYEE_PASSWORDChanging(value);
				this.SendPropertyChanging();
				this._EMPLOYEE_PASSWORD = value;
				this.SendPropertyChanged("EMPLOYEE_PASSWORD");
				this.OnEMPLOYEE_PASSWORDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMPANY_ID", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string COMPANY_ID
	{
		get
		{
			return this._COMPANY_ID;
		}
		set
		{
			if ((this._COMPANY_ID != value))
			{
				if (this._PASSENGER_TRANSPORT_CO.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCOMPANY_IDChanging(value);
				this.SendPropertyChanging();
				this._COMPANY_ID = value;
				this.SendPropertyChanged("COMPANY_ID");
				this.OnCOMPANY_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMPLOYEE_TIMETABLE", Storage="_TIMETABLEs", ThisKey="EMPLOYEE_ID", OtherKey="EMPLOYEE_ID")]
	public EntitySet<TIMETABLE> TIMETABLEs
	{
		get
		{
			return this._TIMETABLEs;
		}
		set
		{
			this._TIMETABLEs.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PASSENGER_TRANSPORT_CO_EMPLOYEE", Storage="_PASSENGER_TRANSPORT_CO", ThisKey="COMPANY_ID", OtherKey="COMPANY_ID", IsForeignKey=true)]
	public PASSENGER_TRANSPORT_CO PASSENGER_TRANSPORT_CO
	{
		get
		{
			return this._PASSENGER_TRANSPORT_CO.Entity;
		}
		set
		{
			PASSENGER_TRANSPORT_CO previousValue = this._PASSENGER_TRANSPORT_CO.Entity;
			if (((previousValue != value) 
						|| (this._PASSENGER_TRANSPORT_CO.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._PASSENGER_TRANSPORT_CO.Entity = null;
					previousValue.EMPLOYEEs.Remove(this);
				}
				this._PASSENGER_TRANSPORT_CO.Entity = value;
				if ((value != null))
				{
					value.EMPLOYEEs.Add(this);
					this._COMPANY_ID = value.COMPANY_ID;
				}
				else
				{
					this._COMPANY_ID = default(string);
				}
				this.SendPropertyChanged("PASSENGER_TRANSPORT_CO");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_TIMETABLEs(TIMETABLE entity)
	{
		this.SendPropertyChanging();
		entity.EMPLOYEE = this;
	}
	
	private void detach_TIMETABLEs(TIMETABLE entity)
	{
		this.SendPropertyChanging();
		entity.EMPLOYEE = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ITINERARY")]
public partial class ITINERARY : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _COACH_ROUTE_ID;
	
	private string _ITINERARY_NAME;
	
	private string _START_TIME;
	
	private string _BOARDING;
	
	private string _DROPPING;
	
	private string _END_TIME;
	
	private EntityRef<COACH_ROUTE> _COACH_ROUTE;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCOACH_ROUTE_IDChanging(string value);
    partial void OnCOACH_ROUTE_IDChanged();
    partial void OnITINERARY_NAMEChanging(string value);
    partial void OnITINERARY_NAMEChanged();
    partial void OnSTART_TIMEChanging(string value);
    partial void OnSTART_TIMEChanged();
    partial void OnBOARDINGChanging(string value);
    partial void OnBOARDINGChanged();
    partial void OnDROPPINGChanging(string value);
    partial void OnDROPPINGChanged();
    partial void OnEND_TIMEChanging(string value);
    partial void OnEND_TIMEChanged();
    #endregion
	
	public ITINERARY()
	{
		this._COACH_ROUTE = default(EntityRef<COACH_ROUTE>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COACH_ROUTE_ID", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string COACH_ROUTE_ID
	{
		get
		{
			return this._COACH_ROUTE_ID;
		}
		set
		{
			if ((this._COACH_ROUTE_ID != value))
			{
				if (this._COACH_ROUTE.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCOACH_ROUTE_IDChanging(value);
				this.SendPropertyChanging();
				this._COACH_ROUTE_ID = value;
				this.SendPropertyChanged("COACH_ROUTE_ID");
				this.OnCOACH_ROUTE_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ITINERARY_NAME", DbType="NVarChar(50)")]
	public string ITINERARY_NAME
	{
		get
		{
			return this._ITINERARY_NAME;
		}
		set
		{
			if ((this._ITINERARY_NAME != value))
			{
				this.OnITINERARY_NAMEChanging(value);
				this.SendPropertyChanging();
				this._ITINERARY_NAME = value;
				this.SendPropertyChanged("ITINERARY_NAME");
				this.OnITINERARY_NAMEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_START_TIME", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
	public string START_TIME
	{
		get
		{
			return this._START_TIME;
		}
		set
		{
			if ((this._START_TIME != value))
			{
				this.OnSTART_TIMEChanging(value);
				this.SendPropertyChanging();
				this._START_TIME = value;
				this.SendPropertyChanged("START_TIME");
				this.OnSTART_TIMEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BOARDING", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string BOARDING
	{
		get
		{
			return this._BOARDING;
		}
		set
		{
			if ((this._BOARDING != value))
			{
				this.OnBOARDINGChanging(value);
				this.SendPropertyChanging();
				this._BOARDING = value;
				this.SendPropertyChanged("BOARDING");
				this.OnBOARDINGChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DROPPING", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string DROPPING
	{
		get
		{
			return this._DROPPING;
		}
		set
		{
			if ((this._DROPPING != value))
			{
				this.OnDROPPINGChanging(value);
				this.SendPropertyChanging();
				this._DROPPING = value;
				this.SendPropertyChanged("DROPPING");
				this.OnDROPPINGChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_END_TIME", DbType="VarChar(6)")]
	public string END_TIME
	{
		get
		{
			return this._END_TIME;
		}
		set
		{
			if ((this._END_TIME != value))
			{
				this.OnEND_TIMEChanging(value);
				this.SendPropertyChanging();
				this._END_TIME = value;
				this.SendPropertyChanged("END_TIME");
				this.OnEND_TIMEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COACH_ROUTE_ITINERARY", Storage="_COACH_ROUTE", ThisKey="COACH_ROUTE_ID", OtherKey="COACH_ROUTE_ID", IsForeignKey=true)]
	public COACH_ROUTE COACH_ROUTE
	{
		get
		{
			return this._COACH_ROUTE.Entity;
		}
		set
		{
			COACH_ROUTE previousValue = this._COACH_ROUTE.Entity;
			if (((previousValue != value) 
						|| (this._COACH_ROUTE.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._COACH_ROUTE.Entity = null;
					previousValue.ITINERARies.Remove(this);
				}
				this._COACH_ROUTE.Entity = value;
				if ((value != null))
				{
					value.ITINERARies.Add(this);
					this._COACH_ROUTE_ID = value.COACH_ROUTE_ID;
				}
				else
				{
					this._COACH_ROUTE_ID = default(string);
				}
				this.SendPropertyChanged("COACH_ROUTE");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PASSENGER_TRANSPORT_CO")]
public partial class PASSENGER_TRANSPORT_CO : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _COMPANY_ID;
	
	private string _COMPANY_NAME;
	
	private string _COMPANY_TEL;
	
	private Byte[] _COMPANY_PICTURE;
	
	private EntitySet<BRAND_OFFICE> _BRAND_OFFICEs;
	
	private EntitySet<EMPLOYEE> _EMPLOYEEs;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCOMPANY_IDChanging(string value);
    partial void OnCOMPANY_IDChanged();
    partial void OnCOMPANY_NAMEChanging(string value);
    partial void OnCOMPANY_NAMEChanged();
    partial void OnCOMPANY_TELChanging(string value);
    partial void OnCOMPANY_TELChanged();
    partial void OnCOMPANY_PICTUREChanging(Byte[] value);
    partial void OnCOMPANY_PICTUREChanged();
    #endregion
	
	public PASSENGER_TRANSPORT_CO()
	{
		this._BRAND_OFFICEs = new EntitySet<BRAND_OFFICE>(new Action<BRAND_OFFICE>(this.attach_BRAND_OFFICEs), new Action<BRAND_OFFICE>(this.detach_BRAND_OFFICEs));
		this._EMPLOYEEs = new EntitySet<EMPLOYEE>(new Action<EMPLOYEE>(this.attach_EMPLOYEEs), new Action<EMPLOYEE>(this.detach_EMPLOYEEs));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMPANY_ID", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string COMPANY_ID
	{
		get
		{
			return this._COMPANY_ID;
		}
		set
		{
			if ((this._COMPANY_ID != value))
			{
				this.OnCOMPANY_IDChanging(value);
				this.SendPropertyChanging();
				this._COMPANY_ID = value;
				this.SendPropertyChanged("COMPANY_ID");
				this.OnCOMPANY_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMPANY_NAME", DbType="NVarChar(50)")]
	public string COMPANY_NAME
	{
		get
		{
			return this._COMPANY_NAME;
		}
		set
		{
			if ((this._COMPANY_NAME != value))
			{
				this.OnCOMPANY_NAMEChanging(value);
				this.SendPropertyChanging();
				this._COMPANY_NAME = value;
				this.SendPropertyChanged("COMPANY_NAME");
				this.OnCOMPANY_NAMEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMPANY_TEL", DbType="NVarChar(12)")]
	public string COMPANY_TEL
	{
		get
		{
			return this._COMPANY_TEL;
		}
		set
		{
			if ((this._COMPANY_TEL != value))
			{
				this.OnCOMPANY_TELChanging(value);
				this.SendPropertyChanging();
				this._COMPANY_TEL = value;
				this.SendPropertyChanged("COMPANY_TEL");
				this.OnCOMPANY_TELChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMPANY_PICTURE", DbType="Image", UpdateCheck=UpdateCheck.Never)]
	public Byte[] COMPANY_PICTURE
	{
		get
		{
			return this._COMPANY_PICTURE;
		}
		set
		{
			if ((this._COMPANY_PICTURE != value))
			{
				this.OnCOMPANY_PICTUREChanging(value);
				this.SendPropertyChanging();
				this._COMPANY_PICTURE = value;
				this.SendPropertyChanged("COMPANY_PICTURE");
				this.OnCOMPANY_PICTUREChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PASSENGER_TRANSPORT_CO_BRAND_OFFICE", Storage="_BRAND_OFFICEs", ThisKey="COMPANY_ID", OtherKey="COMPANY_ID")]
	public EntitySet<BRAND_OFFICE> BRAND_OFFICEs
	{
		get
		{
			return this._BRAND_OFFICEs;
		}
		set
		{
			this._BRAND_OFFICEs.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PASSENGER_TRANSPORT_CO_EMPLOYEE", Storage="_EMPLOYEEs", ThisKey="COMPANY_ID", OtherKey="COMPANY_ID")]
	public EntitySet<EMPLOYEE> EMPLOYEEs
	{
		get
		{
			return this._EMPLOYEEs;
		}
		set
		{
			this._EMPLOYEEs.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_BRAND_OFFICEs(BRAND_OFFICE entity)
	{
		this.SendPropertyChanging();
		entity.PASSENGER_TRANSPORT_CO = this;
	}
	
	private void detach_BRAND_OFFICEs(BRAND_OFFICE entity)
	{
		this.SendPropertyChanging();
		entity.PASSENGER_TRANSPORT_CO = null;
	}
	
	private void attach_EMPLOYEEs(EMPLOYEE entity)
	{
		this.SendPropertyChanging();
		entity.PASSENGER_TRANSPORT_CO = this;
	}
	
	private void detach_EMPLOYEEs(EMPLOYEE entity)
	{
		this.SendPropertyChanging();
		entity.PASSENGER_TRANSPORT_CO = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PAYMENT")]
public partial class PAYMENT : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _PAYMENT_ID;
	
	private string _PAYMENT_NAME;
	
	private EntitySet<TICKET> _TICKETs;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPAYMENT_IDChanging(string value);
    partial void OnPAYMENT_IDChanged();
    partial void OnPAYMENT_NAMEChanging(string value);
    partial void OnPAYMENT_NAMEChanged();
    #endregion
	
	public PAYMENT()
	{
		this._TICKETs = new EntitySet<TICKET>(new Action<TICKET>(this.attach_TICKETs), new Action<TICKET>(this.detach_TICKETs));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PAYMENT_ID", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string PAYMENT_ID
	{
		get
		{
			return this._PAYMENT_ID;
		}
		set
		{
			if ((this._PAYMENT_ID != value))
			{
				this.OnPAYMENT_IDChanging(value);
				this.SendPropertyChanging();
				this._PAYMENT_ID = value;
				this.SendPropertyChanged("PAYMENT_ID");
				this.OnPAYMENT_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PAYMENT_NAME", DbType="NVarChar(50)")]
	public string PAYMENT_NAME
	{
		get
		{
			return this._PAYMENT_NAME;
		}
		set
		{
			if ((this._PAYMENT_NAME != value))
			{
				this.OnPAYMENT_NAMEChanging(value);
				this.SendPropertyChanging();
				this._PAYMENT_NAME = value;
				this.SendPropertyChanged("PAYMENT_NAME");
				this.OnPAYMENT_NAMEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PAYMENT_TICKET", Storage="_TICKETs", ThisKey="PAYMENT_ID", OtherKey="PAYMENT_ID")]
	public EntitySet<TICKET> TICKETs
	{
		get
		{
			return this._TICKETs;
		}
		set
		{
			this._TICKETs.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_TICKETs(TICKET entity)
	{
		this.SendPropertyChanging();
		entity.PAYMENT = this;
	}
	
	private void detach_TICKETs(TICKET entity)
	{
		this.SendPropertyChanging();
		entity.PAYMENT = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SEAT")]
public partial class SEAT : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _SEAT_ID;
	
	private string _LICENSE_PLATE;
	
	private System.Nullable<bool> _SEAT_STATUS;
	
	private EntityRef<COACH> _COACH;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSEAT_IDChanging(string value);
    partial void OnSEAT_IDChanged();
    partial void OnLICENSE_PLATEChanging(string value);
    partial void OnLICENSE_PLATEChanged();
    partial void OnSEAT_STATUSChanging(System.Nullable<bool> value);
    partial void OnSEAT_STATUSChanged();
    #endregion
	
	public SEAT()
	{
		this._COACH = default(EntityRef<COACH>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SEAT_ID", DbType="NVarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string SEAT_ID
	{
		get
		{
			return this._SEAT_ID;
		}
		set
		{
			if ((this._SEAT_ID != value))
			{
				this.OnSEAT_IDChanging(value);
				this.SendPropertyChanging();
				this._SEAT_ID = value;
				this.SendPropertyChanged("SEAT_ID");
				this.OnSEAT_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LICENSE_PLATE", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string LICENSE_PLATE
	{
		get
		{
			return this._LICENSE_PLATE;
		}
		set
		{
			if ((this._LICENSE_PLATE != value))
			{
				if (this._COACH.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnLICENSE_PLATEChanging(value);
				this.SendPropertyChanging();
				this._LICENSE_PLATE = value;
				this.SendPropertyChanged("LICENSE_PLATE");
				this.OnLICENSE_PLATEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SEAT_STATUS", DbType="Bit")]
	public System.Nullable<bool> SEAT_STATUS
	{
		get
		{
			return this._SEAT_STATUS;
		}
		set
		{
			if ((this._SEAT_STATUS != value))
			{
				this.OnSEAT_STATUSChanging(value);
				this.SendPropertyChanging();
				this._SEAT_STATUS = value;
				this.SendPropertyChanged("SEAT_STATUS");
				this.OnSEAT_STATUSChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COACH_SEAT", Storage="_COACH", ThisKey="LICENSE_PLATE", OtherKey="LICENSE_PLATE", IsForeignKey=true)]
	public COACH COACH
	{
		get
		{
			return this._COACH.Entity;
		}
		set
		{
			COACH previousValue = this._COACH.Entity;
			if (((previousValue != value) 
						|| (this._COACH.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._COACH.Entity = null;
					previousValue.SEATs.Remove(this);
				}
				this._COACH.Entity = value;
				if ((value != null))
				{
					value.SEATs.Add(this);
					this._LICENSE_PLATE = value.LICENSE_PLATE;
				}
				else
				{
					this._LICENSE_PLATE = default(string);
				}
				this.SendPropertyChanged("COACH");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TICKET")]
public partial class TICKET : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _TICKET_ID;
	
	private string _PASSENGER_TEL;
	
	private string _PASSENGER_NAME;
	
	private string _DEPARTURE_DATE;
	
	private string _BOARDING;
	
	private string _DROPPING;
	
	private string _SEAT_ID;
	
	private string _COACH_ROUTE_ID;
	
	private string _EMAIL;
	
	private string _PAYMENT_ID;
	
	private string _COMPANY_ID;
	
	private EntitySet<TICKET_ORDER> _TICKET_ORDERs;
	
	private EntityRef<COACH_ROUTE> _COACH_ROUTE;
	
	private EntityRef<PAYMENT> _PAYMENT;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTICKET_IDChanging(int value);
    partial void OnTICKET_IDChanged();
    partial void OnPASSENGER_TELChanging(string value);
    partial void OnPASSENGER_TELChanged();
    partial void OnPASSENGER_NAMEChanging(string value);
    partial void OnPASSENGER_NAMEChanged();
    partial void OnDEPARTURE_DATEChanging(string value);
    partial void OnDEPARTURE_DATEChanged();
    partial void OnBOARDINGChanging(string value);
    partial void OnBOARDINGChanged();
    partial void OnDROPPINGChanging(string value);
    partial void OnDROPPINGChanged();
    partial void OnSEAT_IDChanging(string value);
    partial void OnSEAT_IDChanged();
    partial void OnCOACH_ROUTE_IDChanging(string value);
    partial void OnCOACH_ROUTE_IDChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnPAYMENT_IDChanging(string value);
    partial void OnPAYMENT_IDChanged();
    partial void OnCOMPANY_IDChanging(string value);
    partial void OnCOMPANY_IDChanged();
    #endregion
	
	public TICKET()
	{
		this._TICKET_ORDERs = new EntitySet<TICKET_ORDER>(new Action<TICKET_ORDER>(this.attach_TICKET_ORDERs), new Action<TICKET_ORDER>(this.detach_TICKET_ORDERs));
		this._COACH_ROUTE = default(EntityRef<COACH_ROUTE>);
		this._PAYMENT = default(EntityRef<PAYMENT>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TICKET_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int TICKET_ID
	{
		get
		{
			return this._TICKET_ID;
		}
		set
		{
			if ((this._TICKET_ID != value))
			{
				this.OnTICKET_IDChanging(value);
				this.SendPropertyChanging();
				this._TICKET_ID = value;
				this.SendPropertyChanged("TICKET_ID");
				this.OnTICKET_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PASSENGER_TEL", DbType="NVarChar(12) NOT NULL", CanBeNull=false)]
	public string PASSENGER_TEL
	{
		get
		{
			return this._PASSENGER_TEL;
		}
		set
		{
			if ((this._PASSENGER_TEL != value))
			{
				this.OnPASSENGER_TELChanging(value);
				this.SendPropertyChanging();
				this._PASSENGER_TEL = value;
				this.SendPropertyChanged("PASSENGER_TEL");
				this.OnPASSENGER_TELChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PASSENGER_NAME", DbType="NVarChar(50)")]
	public string PASSENGER_NAME
	{
		get
		{
			return this._PASSENGER_NAME;
		}
		set
		{
			if ((this._PASSENGER_NAME != value))
			{
				this.OnPASSENGER_NAMEChanging(value);
				this.SendPropertyChanging();
				this._PASSENGER_NAME = value;
				this.SendPropertyChanged("PASSENGER_NAME");
				this.OnPASSENGER_NAMEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEPARTURE_DATE", DbType="NVarChar(15)")]
	public string DEPARTURE_DATE
	{
		get
		{
			return this._DEPARTURE_DATE;
		}
		set
		{
			if ((this._DEPARTURE_DATE != value))
			{
				this.OnDEPARTURE_DATEChanging(value);
				this.SendPropertyChanging();
				this._DEPARTURE_DATE = value;
				this.SendPropertyChanged("DEPARTURE_DATE");
				this.OnDEPARTURE_DATEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BOARDING", DbType="NVarChar(20)")]
	public string BOARDING
	{
		get
		{
			return this._BOARDING;
		}
		set
		{
			if ((this._BOARDING != value))
			{
				this.OnBOARDINGChanging(value);
				this.SendPropertyChanging();
				this._BOARDING = value;
				this.SendPropertyChanged("BOARDING");
				this.OnBOARDINGChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DROPPING", DbType="NVarChar(20)")]
	public string DROPPING
	{
		get
		{
			return this._DROPPING;
		}
		set
		{
			if ((this._DROPPING != value))
			{
				this.OnDROPPINGChanging(value);
				this.SendPropertyChanging();
				this._DROPPING = value;
				this.SendPropertyChanged("DROPPING");
				this.OnDROPPINGChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SEAT_ID", DbType="NVarChar(3)")]
	public string SEAT_ID
	{
		get
		{
			return this._SEAT_ID;
		}
		set
		{
			if ((this._SEAT_ID != value))
			{
				this.OnSEAT_IDChanging(value);
				this.SendPropertyChanging();
				this._SEAT_ID = value;
				this.SendPropertyChanged("SEAT_ID");
				this.OnSEAT_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COACH_ROUTE_ID", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string COACH_ROUTE_ID
	{
		get
		{
			return this._COACH_ROUTE_ID;
		}
		set
		{
			if ((this._COACH_ROUTE_ID != value))
			{
				if (this._COACH_ROUTE.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCOACH_ROUTE_IDChanging(value);
				this.SendPropertyChanging();
				this._COACH_ROUTE_ID = value;
				this.SendPropertyChanged("COACH_ROUTE_ID");
				this.OnCOACH_ROUTE_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string EMAIL
	{
		get
		{
			return this._EMAIL;
		}
		set
		{
			if ((this._EMAIL != value))
			{
				this.OnEMAILChanging(value);
				this.SendPropertyChanging();
				this._EMAIL = value;
				this.SendPropertyChanged("EMAIL");
				this.OnEMAILChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PAYMENT_ID", DbType="NVarChar(10)")]
	public string PAYMENT_ID
	{
		get
		{
			return this._PAYMENT_ID;
		}
		set
		{
			if ((this._PAYMENT_ID != value))
			{
				if (this._PAYMENT.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnPAYMENT_IDChanging(value);
				this.SendPropertyChanging();
				this._PAYMENT_ID = value;
				this.SendPropertyChanged("PAYMENT_ID");
				this.OnPAYMENT_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMPANY_ID", DbType="NVarChar(10)")]
	public string COMPANY_ID
	{
		get
		{
			return this._COMPANY_ID;
		}
		set
		{
			if ((this._COMPANY_ID != value))
			{
				this.OnCOMPANY_IDChanging(value);
				this.SendPropertyChanging();
				this._COMPANY_ID = value;
				this.SendPropertyChanged("COMPANY_ID");
				this.OnCOMPANY_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TICKET_TICKET_ORDER", Storage="_TICKET_ORDERs", ThisKey="TICKET_ID", OtherKey="TICKET_ID")]
	public EntitySet<TICKET_ORDER> TICKET_ORDERs
	{
		get
		{
			return this._TICKET_ORDERs;
		}
		set
		{
			this._TICKET_ORDERs.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COACH_ROUTE_TICKET", Storage="_COACH_ROUTE", ThisKey="COACH_ROUTE_ID", OtherKey="COACH_ROUTE_ID", IsForeignKey=true)]
	public COACH_ROUTE COACH_ROUTE
	{
		get
		{
			return this._COACH_ROUTE.Entity;
		}
		set
		{
			COACH_ROUTE previousValue = this._COACH_ROUTE.Entity;
			if (((previousValue != value) 
						|| (this._COACH_ROUTE.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._COACH_ROUTE.Entity = null;
					previousValue.TICKETs.Remove(this);
				}
				this._COACH_ROUTE.Entity = value;
				if ((value != null))
				{
					value.TICKETs.Add(this);
					this._COACH_ROUTE_ID = value.COACH_ROUTE_ID;
				}
				else
				{
					this._COACH_ROUTE_ID = default(string);
				}
				this.SendPropertyChanged("COACH_ROUTE");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PAYMENT_TICKET", Storage="_PAYMENT", ThisKey="PAYMENT_ID", OtherKey="PAYMENT_ID", IsForeignKey=true)]
	public PAYMENT PAYMENT
	{
		get
		{
			return this._PAYMENT.Entity;
		}
		set
		{
			PAYMENT previousValue = this._PAYMENT.Entity;
			if (((previousValue != value) 
						|| (this._PAYMENT.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._PAYMENT.Entity = null;
					previousValue.TICKETs.Remove(this);
				}
				this._PAYMENT.Entity = value;
				if ((value != null))
				{
					value.TICKETs.Add(this);
					this._PAYMENT_ID = value.PAYMENT_ID;
				}
				else
				{
					this._PAYMENT_ID = default(string);
				}
				this.SendPropertyChanged("PAYMENT");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_TICKET_ORDERs(TICKET_ORDER entity)
	{
		this.SendPropertyChanging();
		entity.TICKET = this;
	}
	
	private void detach_TICKET_ORDERs(TICKET_ORDER entity)
	{
		this.SendPropertyChanging();
		entity.TICKET = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TICKET_ORDER")]
public partial class TICKET_ORDER : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _TICKET_ID;
	
	private string _EMAIL;
	
	private System.Nullable<System.DateTime> _PAYOUT_DATE;
	
	private System.Nullable<System.DateTime> _ORDER_DATE;
	
	private string _TICKET_STATUS;
	
	private System.Nullable<System.DateTime> _RECEVIED_DATE;
	
	private EntityRef<BOOKING_PERSON> _BOOKING_PERSON;
	
	private EntityRef<TICKET> _TICKET;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTICKET_IDChanging(int value);
    partial void OnTICKET_IDChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnPAYOUT_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnPAYOUT_DATEChanged();
    partial void OnORDER_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnORDER_DATEChanged();
    partial void OnTICKET_STATUSChanging(string value);
    partial void OnTICKET_STATUSChanged();
    partial void OnRECEVIED_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnRECEVIED_DATEChanged();
    #endregion
	
	public TICKET_ORDER()
	{
		this._BOOKING_PERSON = default(EntityRef<BOOKING_PERSON>);
		this._TICKET = default(EntityRef<TICKET>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TICKET_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int TICKET_ID
	{
		get
		{
			return this._TICKET_ID;
		}
		set
		{
			if ((this._TICKET_ID != value))
			{
				if (this._TICKET.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnTICKET_IDChanging(value);
				this.SendPropertyChanging();
				this._TICKET_ID = value;
				this.SendPropertyChanged("TICKET_ID");
				this.OnTICKET_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string EMAIL
	{
		get
		{
			return this._EMAIL;
		}
		set
		{
			if ((this._EMAIL != value))
			{
				if (this._BOOKING_PERSON.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnEMAILChanging(value);
				this.SendPropertyChanging();
				this._EMAIL = value;
				this.SendPropertyChanged("EMAIL");
				this.OnEMAILChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PAYOUT_DATE", DbType="Date")]
	public System.Nullable<System.DateTime> PAYOUT_DATE
	{
		get
		{
			return this._PAYOUT_DATE;
		}
		set
		{
			if ((this._PAYOUT_DATE != value))
			{
				this.OnPAYOUT_DATEChanging(value);
				this.SendPropertyChanging();
				this._PAYOUT_DATE = value;
				this.SendPropertyChanged("PAYOUT_DATE");
				this.OnPAYOUT_DATEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORDER_DATE", DbType="DateTime")]
	public System.Nullable<System.DateTime> ORDER_DATE
	{
		get
		{
			return this._ORDER_DATE;
		}
		set
		{
			if ((this._ORDER_DATE != value))
			{
				this.OnORDER_DATEChanging(value);
				this.SendPropertyChanging();
				this._ORDER_DATE = value;
				this.SendPropertyChanged("ORDER_DATE");
				this.OnORDER_DATEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TICKET_STATUS", DbType="VarChar(20)")]
	public string TICKET_STATUS
	{
		get
		{
			return this._TICKET_STATUS;
		}
		set
		{
			if ((this._TICKET_STATUS != value))
			{
				this.OnTICKET_STATUSChanging(value);
				this.SendPropertyChanging();
				this._TICKET_STATUS = value;
				this.SendPropertyChanged("TICKET_STATUS");
				this.OnTICKET_STATUSChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RECEVIED_DATE", DbType="DateTime")]
	public System.Nullable<System.DateTime> RECEVIED_DATE
	{
		get
		{
			return this._RECEVIED_DATE;
		}
		set
		{
			if ((this._RECEVIED_DATE != value))
			{
				this.OnRECEVIED_DATEChanging(value);
				this.SendPropertyChanging();
				this._RECEVIED_DATE = value;
				this.SendPropertyChanged("RECEVIED_DATE");
				this.OnRECEVIED_DATEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BOOKING_PERSON_TICKET_ORDER", Storage="_BOOKING_PERSON", ThisKey="EMAIL", OtherKey="EMAIL", IsForeignKey=true)]
	public BOOKING_PERSON BOOKING_PERSON
	{
		get
		{
			return this._BOOKING_PERSON.Entity;
		}
		set
		{
			BOOKING_PERSON previousValue = this._BOOKING_PERSON.Entity;
			if (((previousValue != value) 
						|| (this._BOOKING_PERSON.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._BOOKING_PERSON.Entity = null;
					previousValue.TICKET_ORDERs.Remove(this);
				}
				this._BOOKING_PERSON.Entity = value;
				if ((value != null))
				{
					value.TICKET_ORDERs.Add(this);
					this._EMAIL = value.EMAIL;
				}
				else
				{
					this._EMAIL = default(string);
				}
				this.SendPropertyChanged("BOOKING_PERSON");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TICKET_TICKET_ORDER", Storage="_TICKET", ThisKey="TICKET_ID", OtherKey="TICKET_ID", IsForeignKey=true)]
	public TICKET TICKET
	{
		get
		{
			return this._TICKET.Entity;
		}
		set
		{
			TICKET previousValue = this._TICKET.Entity;
			if (((previousValue != value) 
						|| (this._TICKET.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TICKET.Entity = null;
					previousValue.TICKET_ORDERs.Remove(this);
				}
				this._TICKET.Entity = value;
				if ((value != null))
				{
					value.TICKET_ORDERs.Add(this);
					this._TICKET_ID = value.TICKET_ID;
				}
				else
				{
					this._TICKET_ID = default(int);
				}
				this.SendPropertyChanged("TICKET");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

public partial class proFROM_CITYResult
{
	
	private string _CITY;
	
	public proFROM_CITYResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITY", DbType="NVarChar(30)")]
	public string CITY
	{
		get
		{
			return this._CITY;
		}
		set
		{
			if ((this._CITY != value))
			{
				this._CITY = value;
			}
		}
	}
}

public partial class proTO_CITYResult
{
	
	private string _DROPPING;
	
	public proTO_CITYResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DROPPING", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
	public string DROPPING
	{
		get
		{
			return this._DROPPING;
		}
		set
		{
			if ((this._DROPPING != value))
			{
				this._DROPPING = value;
			}
		}
	}
}

public partial class proBOARDING_LISTResult
{
	
	private string _Column1;
	
	public proBOARDING_LISTResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="NVarChar(81)")]
	public string Column1
	{
		get
		{
			return this._Column1;
		}
		set
		{
			if ((this._Column1 != value))
			{
				this._Column1 = value;
			}
		}
	}
}

public partial class proDROPPING_LISTResult
{
	
	private string _Column1;
	
	public proDROPPING_LISTResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="NVarChar(81)")]
	public string Column1
	{
		get
		{
			return this._Column1;
		}
		set
		{
			if ((this._Column1 != value))
			{
				this._Column1 = value;
			}
		}
	}
}

public partial class proROUTE_COACH_TO_LISTResult
{
	
	private string _COACH_ROUTE_NAME;
	
	private System.Nullable<int> _COACH_ROUTE_PRICE;
	
	private string _START_TIME;
	
	private System.Nullable<int> _ROUTE_TIME;
	
	private System.Nullable<int> _TOTAL_SEATS;
	
	private string _TYPE_SEAT;
	
	private string _COMPANY_NAME;
	
	private string _COMPANY_ID;
	
	private string _END_TIME;
	
	private string _COACH_ROUTE_ID;
	
	public proROUTE_COACH_TO_LISTResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COACH_ROUTE_NAME", DbType="NVarChar(50)")]
	public string COACH_ROUTE_NAME
	{
		get
		{
			return this._COACH_ROUTE_NAME;
		}
		set
		{
			if ((this._COACH_ROUTE_NAME != value))
			{
				this._COACH_ROUTE_NAME = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COACH_ROUTE_PRICE", DbType="Int")]
	public System.Nullable<int> COACH_ROUTE_PRICE
	{
		get
		{
			return this._COACH_ROUTE_PRICE;
		}
		set
		{
			if ((this._COACH_ROUTE_PRICE != value))
			{
				this._COACH_ROUTE_PRICE = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_START_TIME", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
	public string START_TIME
	{
		get
		{
			return this._START_TIME;
		}
		set
		{
			if ((this._START_TIME != value))
			{
				this._START_TIME = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROUTE_TIME", DbType="Int")]
	public System.Nullable<int> ROUTE_TIME
	{
		get
		{
			return this._ROUTE_TIME;
		}
		set
		{
			if ((this._ROUTE_TIME != value))
			{
				this._ROUTE_TIME = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL_SEATS", DbType="Int")]
	public System.Nullable<int> TOTAL_SEATS
	{
		get
		{
			return this._TOTAL_SEATS;
		}
		set
		{
			if ((this._TOTAL_SEATS != value))
			{
				this._TOTAL_SEATS = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYPE_SEAT", DbType="NVarChar(10)")]
	public string TYPE_SEAT
	{
		get
		{
			return this._TYPE_SEAT;
		}
		set
		{
			if ((this._TYPE_SEAT != value))
			{
				this._TYPE_SEAT = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMPANY_NAME", DbType="NVarChar(50)")]
	public string COMPANY_NAME
	{
		get
		{
			return this._COMPANY_NAME;
		}
		set
		{
			if ((this._COMPANY_NAME != value))
			{
				this._COMPANY_NAME = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMPANY_ID", DbType="NVarChar(10)")]
	public string COMPANY_ID
	{
		get
		{
			return this._COMPANY_ID;
		}
		set
		{
			if ((this._COMPANY_ID != value))
			{
				this._COMPANY_ID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_END_TIME", DbType="VarChar(6)")]
	public string END_TIME
	{
		get
		{
			return this._END_TIME;
		}
		set
		{
			if ((this._END_TIME != value))
			{
				this._END_TIME = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COACH_ROUTE_ID", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string COACH_ROUTE_ID
	{
		get
		{
			return this._COACH_ROUTE_ID;
		}
		set
		{
			if ((this._COACH_ROUTE_ID != value))
			{
				this._COACH_ROUTE_ID = value;
			}
		}
	}
}

public partial class proLOGINResult
{
	
	private string _EMAIL;
	
	private string _BOOKING_PERSON_TEL;
	
	private string _BOOKING_PERSON_NAME;
	
	public proLOGINResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string EMAIL
	{
		get
		{
			return this._EMAIL;
		}
		set
		{
			if ((this._EMAIL != value))
			{
				this._EMAIL = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BOOKING_PERSON_TEL", DbType="NVarChar(12)")]
	public string BOOKING_PERSON_TEL
	{
		get
		{
			return this._BOOKING_PERSON_TEL;
		}
		set
		{
			if ((this._BOOKING_PERSON_TEL != value))
			{
				this._BOOKING_PERSON_TEL = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BOOKING_PERSON_NAME", DbType="NVarChar(50)")]
	public string BOOKING_PERSON_NAME
	{
		get
		{
			return this._BOOKING_PERSON_NAME;
		}
		set
		{
			if ((this._BOOKING_PERSON_NAME != value))
			{
				this._BOOKING_PERSON_NAME = value;
			}
		}
	}
}

public partial class proSIGNUPResult
{
	
	private string _EMAIL;
	
	private string _BOOKING_PERSON_TEL;
	
	private string _BOOKING_PERSON_NAME;
	
	public proSIGNUPResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string EMAIL
	{
		get
		{
			return this._EMAIL;
		}
		set
		{
			if ((this._EMAIL != value))
			{
				this._EMAIL = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BOOKING_PERSON_TEL", DbType="NVarChar(12)")]
	public string BOOKING_PERSON_TEL
	{
		get
		{
			return this._BOOKING_PERSON_TEL;
		}
		set
		{
			if ((this._BOOKING_PERSON_TEL != value))
			{
				this._BOOKING_PERSON_TEL = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BOOKING_PERSON_NAME", DbType="NVarChar(50)")]
	public string BOOKING_PERSON_NAME
	{
		get
		{
			return this._BOOKING_PERSON_NAME;
		}
		set
		{
			if ((this._BOOKING_PERSON_NAME != value))
			{
				this._BOOKING_PERSON_NAME = value;
			}
		}
	}
}

public partial class proUPDATE_STATUS_TICKETResult
{
	
	private int _RESULT;
	
	public proUPDATE_STATUS_TICKETResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RESULT", DbType="Int NOT NULL")]
	public int RESULT
	{
		get
		{
			return this._RESULT;
		}
		set
		{
			if ((this._RESULT != value))
			{
				this._RESULT = value;
			}
		}
	}
}

public partial class proTICKET_BOOKINGResult
{
	
	private int _RESULT;
	
	public proTICKET_BOOKINGResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RESULT", DbType="Int NOT NULL")]
	public int RESULT
	{
		get
		{
			return this._RESULT;
		}
		set
		{
			if ((this._RESULT != value))
			{
				this._RESULT = value;
			}
		}
	}
}

public partial class proUPDATE_PAYMENTResult
{
	
	private string _ORDER_ID;
	
	private int _TICKET_ID;
	
	private string _EMAIL;
	
	private System.Nullable<System.DateTime> _PAYOUT_DATE;
	
	private System.Nullable<System.DateTime> _ORDER_DATE;
	
	private string _TICKET_STATUS;
	
	private System.Nullable<System.DateTime> _RECEVIED_DATE;
	
	private string _PAYMENT_ID;
	
	public proUPDATE_PAYMENTResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORDER_ID", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
	public string ORDER_ID
	{
		get
		{
			return this._ORDER_ID;
		}
		set
		{
			if ((this._ORDER_ID != value))
			{
				this._ORDER_ID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TICKET_ID", DbType="Int NOT NULL")]
	public int TICKET_ID
	{
		get
		{
			return this._TICKET_ID;
		}
		set
		{
			if ((this._TICKET_ID != value))
			{
				this._TICKET_ID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string EMAIL
	{
		get
		{
			return this._EMAIL;
		}
		set
		{
			if ((this._EMAIL != value))
			{
				this._EMAIL = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PAYOUT_DATE", DbType="Date")]
	public System.Nullable<System.DateTime> PAYOUT_DATE
	{
		get
		{
			return this._PAYOUT_DATE;
		}
		set
		{
			if ((this._PAYOUT_DATE != value))
			{
				this._PAYOUT_DATE = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORDER_DATE", DbType="DateTime")]
	public System.Nullable<System.DateTime> ORDER_DATE
	{
		get
		{
			return this._ORDER_DATE;
		}
		set
		{
			if ((this._ORDER_DATE != value))
			{
				this._ORDER_DATE = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TICKET_STATUS", DbType="VarChar(20)")]
	public string TICKET_STATUS
	{
		get
		{
			return this._TICKET_STATUS;
		}
		set
		{
			if ((this._TICKET_STATUS != value))
			{
				this._TICKET_STATUS = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RECEVIED_DATE", DbType="DateTime")]
	public System.Nullable<System.DateTime> RECEVIED_DATE
	{
		get
		{
			return this._RECEVIED_DATE;
		}
		set
		{
			if ((this._RECEVIED_DATE != value))
			{
				this._RECEVIED_DATE = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PAYMENT_ID", DbType="NVarChar(10)")]
	public string PAYMENT_ID
	{
		get
		{
			return this._PAYMENT_ID;
		}
		set
		{
			if ((this._PAYMENT_ID != value))
			{
				this._PAYMENT_ID = value;
			}
		}
	}
}

public partial class proTICKET_ORDER_LISTResult
{
	
	private int _TICKET_ID;
	
	private string _EMAIL;
	
	private System.Nullable<System.DateTime> _ORDER_DATE;
	
	public proTICKET_ORDER_LISTResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TICKET_ID", DbType="Int NOT NULL")]
	public int TICKET_ID
	{
		get
		{
			return this._TICKET_ID;
		}
		set
		{
			if ((this._TICKET_ID != value))
			{
				this._TICKET_ID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string EMAIL
	{
		get
		{
			return this._EMAIL;
		}
		set
		{
			if ((this._EMAIL != value))
			{
				this._EMAIL = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORDER_DATE", DbType="DateTime")]
	public System.Nullable<System.DateTime> ORDER_DATE
	{
		get
		{
			return this._ORDER_DATE;
		}
		set
		{
			if ((this._ORDER_DATE != value))
			{
				this._ORDER_DATE = value;
			}
		}
	}
}

public partial class proDELETE_TICKETResult
{
	
	private int _RESULT;
	
	public proDELETE_TICKETResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RESULT", DbType="Int NOT NULL")]
	public int RESULT
	{
		get
		{
			return this._RESULT;
		}
		set
		{
			if ((this._RESULT != value))
			{
				this._RESULT = value;
			}
		}
	}
}

public partial class proSEAT_TO_LISTResult
{
	
	private string _SEAT_ID;
	
	private System.Nullable<int> _SEAT_STATUS;
	
	private System.Nullable<int> _EXTRA_FEE;
	
	private string _LICENSE_PLATE;
	
	public proSEAT_TO_LISTResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SEAT_ID", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
	public string SEAT_ID
	{
		get
		{
			return this._SEAT_ID;
		}
		set
		{
			if ((this._SEAT_ID != value))
			{
				this._SEAT_ID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SEAT_STATUS", DbType="Int")]
	public System.Nullable<int> SEAT_STATUS
	{
		get
		{
			return this._SEAT_STATUS;
		}
		set
		{
			if ((this._SEAT_STATUS != value))
			{
				this._SEAT_STATUS = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EXTRA_FEE", DbType="Int")]
	public System.Nullable<int> EXTRA_FEE
	{
		get
		{
			return this._EXTRA_FEE;
		}
		set
		{
			if ((this._EXTRA_FEE != value))
			{
				this._EXTRA_FEE = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LICENSE_PLATE", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string LICENSE_PLATE
	{
		get
		{
			return this._LICENSE_PLATE;
		}
		set
		{
			if ((this._LICENSE_PLATE != value))
			{
				this._LICENSE_PLATE = value;
			}
		}
	}
}

public partial class proCOACHSTATIONGetTOListResult
{
	
	private string _COACH_STATION_ID;
	
	private string _COACH_STATION_NAME;
	
	private string _COACH_STATION_ADDRESS;
	
	private string _COACH_STATION_TEL;
	
	private Byte[] _COACH_STATION_PICTURE;
	
	private string _CITY;
	
	public proCOACHSTATIONGetTOListResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COACH_STATION_ID", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string COACH_STATION_ID
	{
		get
		{
			return this._COACH_STATION_ID;
		}
		set
		{
			if ((this._COACH_STATION_ID != value))
			{
				this._COACH_STATION_ID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COACH_STATION_NAME", DbType="NVarChar(50)")]
	public string COACH_STATION_NAME
	{
		get
		{
			return this._COACH_STATION_NAME;
		}
		set
		{
			if ((this._COACH_STATION_NAME != value))
			{
				this._COACH_STATION_NAME = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COACH_STATION_ADDRESS", DbType="NVarChar(100)")]
	public string COACH_STATION_ADDRESS
	{
		get
		{
			return this._COACH_STATION_ADDRESS;
		}
		set
		{
			if ((this._COACH_STATION_ADDRESS != value))
			{
				this._COACH_STATION_ADDRESS = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COACH_STATION_TEL", DbType="NVarChar(12)")]
	public string COACH_STATION_TEL
	{
		get
		{
			return this._COACH_STATION_TEL;
		}
		set
		{
			if ((this._COACH_STATION_TEL != value))
			{
				this._COACH_STATION_TEL = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COACH_STATION_PICTURE", DbType="Image")]
	public Byte[] COACH_STATION_PICTURE
	{
		get
		{
			return this._COACH_STATION_PICTURE;
		}
		set
		{
			if ((this._COACH_STATION_PICTURE != value))
			{
				this._COACH_STATION_PICTURE = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITY", DbType="NVarChar(30)")]
	public string CITY
	{
		get
		{
			return this._CITY;
		}
		set
		{
			if ((this._CITY != value))
			{
				this._CITY = value;
			}
		}
	}
}

public partial class proCOACHSTATIONInsertResult
{
	
	private int _Column1;
	
	public proCOACHSTATIONInsertResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Int NOT NULL")]
	public int Column1
	{
		get
		{
			return this._Column1;
		}
		set
		{
			if ((this._Column1 != value))
			{
				this._Column1 = value;
			}
		}
	}
}

public partial class proGetListOfficebyCoachStationResult
{
	
	private string _COACH_STATION_ID;
	
	private string _COMPANY_ID;
	
	private string _OFFICE_NAME;
	
	private string _OFFICE_TEL;
	
	private Byte[] _OFFICE_PICTURE;
	
	public proGetListOfficebyCoachStationResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COACH_STATION_ID", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string COACH_STATION_ID
	{
		get
		{
			return this._COACH_STATION_ID;
		}
		set
		{
			if ((this._COACH_STATION_ID != value))
			{
				this._COACH_STATION_ID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMPANY_ID", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string COMPANY_ID
	{
		get
		{
			return this._COMPANY_ID;
		}
		set
		{
			if ((this._COMPANY_ID != value))
			{
				this._COMPANY_ID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OFFICE_NAME", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
	public string OFFICE_NAME
	{
		get
		{
			return this._OFFICE_NAME;
		}
		set
		{
			if ((this._OFFICE_NAME != value))
			{
				this._OFFICE_NAME = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OFFICE_TEL", DbType="VarChar(12)")]
	public string OFFICE_TEL
	{
		get
		{
			return this._OFFICE_TEL;
		}
		set
		{
			if ((this._OFFICE_TEL != value))
			{
				this._OFFICE_TEL = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OFFICE_PICTURE", DbType="Image")]
	public Byte[] OFFICE_PICTURE
	{
		get
		{
			return this._OFFICE_PICTURE;
		}
		set
		{
			if ((this._OFFICE_PICTURE != value))
			{
				this._OFFICE_PICTURE = value;
			}
		}
	}
}

public partial class proGetListOfficebyCompanyResult
{
	
	private string _COACH_STATION_ID;
	
	private string _COMPANY_ID;
	
	private string _OFFICE_NAME;
	
	private string _OFFICE_TEL;
	
	private Byte[] _OFFICE_PICTURE;
	
	public proGetListOfficebyCompanyResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COACH_STATION_ID", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string COACH_STATION_ID
	{
		get
		{
			return this._COACH_STATION_ID;
		}
		set
		{
			if ((this._COACH_STATION_ID != value))
			{
				this._COACH_STATION_ID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMPANY_ID", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string COMPANY_ID
	{
		get
		{
			return this._COMPANY_ID;
		}
		set
		{
			if ((this._COMPANY_ID != value))
			{
				this._COMPANY_ID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OFFICE_NAME", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
	public string OFFICE_NAME
	{
		get
		{
			return this._OFFICE_NAME;
		}
		set
		{
			if ((this._OFFICE_NAME != value))
			{
				this._OFFICE_NAME = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OFFICE_TEL", DbType="VarChar(12)")]
	public string OFFICE_TEL
	{
		get
		{
			return this._OFFICE_TEL;
		}
		set
		{
			if ((this._OFFICE_TEL != value))
			{
				this._OFFICE_TEL = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OFFICE_PICTURE", DbType="Image")]
	public Byte[] OFFICE_PICTURE
	{
		get
		{
			return this._OFFICE_PICTURE;
		}
		set
		{
			if ((this._OFFICE_PICTURE != value))
			{
				this._OFFICE_PICTURE = value;
			}
		}
	}
}

public partial class proINSERT_BRAND_OFFICEResult
{
	
	private int _Column1;
	
	public proINSERT_BRAND_OFFICEResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Int NOT NULL")]
	public int Column1
	{
		get
		{
			return this._Column1;
		}
		set
		{
			if ((this._Column1 != value))
			{
				this._Column1 = value;
			}
		}
	}
}

public partial class proCOACHGetTOListResult
{
	
	private string _LICENSE_PLATE;
	
	private string _TYPE_SEAT;
	
	private System.Nullable<int> _TOTAL_SEATS;
	
	private System.Nullable<int> _EXTRA_FEE;
	
	public proCOACHGetTOListResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LICENSE_PLATE", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string LICENSE_PLATE
	{
		get
		{
			return this._LICENSE_PLATE;
		}
		set
		{
			if ((this._LICENSE_PLATE != value))
			{
				this._LICENSE_PLATE = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYPE_SEAT", DbType="NVarChar(10)")]
	public string TYPE_SEAT
	{
		get
		{
			return this._TYPE_SEAT;
		}
		set
		{
			if ((this._TYPE_SEAT != value))
			{
				this._TYPE_SEAT = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL_SEATS", DbType="Int")]
	public System.Nullable<int> TOTAL_SEATS
	{
		get
		{
			return this._TOTAL_SEATS;
		}
		set
		{
			if ((this._TOTAL_SEATS != value))
			{
				this._TOTAL_SEATS = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EXTRA_FEE", DbType="Int")]
	public System.Nullable<int> EXTRA_FEE
	{
		get
		{
			return this._EXTRA_FEE;
		}
		set
		{
			if ((this._EXTRA_FEE != value))
			{
				this._EXTRA_FEE = value;
			}
		}
	}
}

public partial class proCOACHInsertResult
{
	
	private int _Column1;
	
	public proCOACHInsertResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Int NOT NULL")]
	public int Column1
	{
		get
		{
			return this._Column1;
		}
		set
		{
			if ((this._Column1 != value))
			{
				this._Column1 = value;
			}
		}
	}
}

public partial class proCOACHROUTEInsertResult
{
	
	private int _Column1;
	
	public proCOACHROUTEInsertResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Int NOT NULL")]
	public int Column1
	{
		get
		{
			return this._Column1;
		}
		set
		{
			if ((this._Column1 != value))
			{
				this._Column1 = value;
			}
		}
	}
}

public partial class proCOACHROUTEListResult
{
	
	private string _COACH_ROUTE_ID;
	
	private string _COACH_ROUTE_NAME;
	
	private System.Nullable<int> _COACH_ROUTE_PRICE;
	
	private string _DEPARTURE_TIME;
	
	private System.Nullable<int> _ROUTE_TIME;
	
	public proCOACHROUTEListResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COACH_ROUTE_ID", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string COACH_ROUTE_ID
	{
		get
		{
			return this._COACH_ROUTE_ID;
		}
		set
		{
			if ((this._COACH_ROUTE_ID != value))
			{
				this._COACH_ROUTE_ID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COACH_ROUTE_NAME", DbType="NVarChar(50)")]
	public string COACH_ROUTE_NAME
	{
		get
		{
			return this._COACH_ROUTE_NAME;
		}
		set
		{
			if ((this._COACH_ROUTE_NAME != value))
			{
				this._COACH_ROUTE_NAME = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COACH_ROUTE_PRICE", DbType="Int")]
	public System.Nullable<int> COACH_ROUTE_PRICE
	{
		get
		{
			return this._COACH_ROUTE_PRICE;
		}
		set
		{
			if ((this._COACH_ROUTE_PRICE != value))
			{
				this._COACH_ROUTE_PRICE = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEPARTURE_TIME", DbType="VarChar(6)")]
	public string DEPARTURE_TIME
	{
		get
		{
			return this._DEPARTURE_TIME;
		}
		set
		{
			if ((this._DEPARTURE_TIME != value))
			{
				this._DEPARTURE_TIME = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROUTE_TIME", DbType="Int")]
	public System.Nullable<int> ROUTE_TIME
	{
		get
		{
			return this._ROUTE_TIME;
		}
		set
		{
			if ((this._ROUTE_TIME != value))
			{
				this._ROUTE_TIME = value;
			}
		}
	}
}

public partial class proITINERARYListbyCOACHROUTEResult
{
	
	private string _COACH_ROUTE_ID;
	
	private string _ITINERARY_NAME;
	
	private string _START_TIME;
	
	private string _BOARDING;
	
	private string _DROPPING;
	
	private string _END_TIME;
	
	public proITINERARYListbyCOACHROUTEResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COACH_ROUTE_ID", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string COACH_ROUTE_ID
	{
		get
		{
			return this._COACH_ROUTE_ID;
		}
		set
		{
			if ((this._COACH_ROUTE_ID != value))
			{
				this._COACH_ROUTE_ID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ITINERARY_NAME", DbType="NVarChar(50)")]
	public string ITINERARY_NAME
	{
		get
		{
			return this._ITINERARY_NAME;
		}
		set
		{
			if ((this._ITINERARY_NAME != value))
			{
				this._ITINERARY_NAME = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_START_TIME", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
	public string START_TIME
	{
		get
		{
			return this._START_TIME;
		}
		set
		{
			if ((this._START_TIME != value))
			{
				this._START_TIME = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BOARDING", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
	public string BOARDING
	{
		get
		{
			return this._BOARDING;
		}
		set
		{
			if ((this._BOARDING != value))
			{
				this._BOARDING = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DROPPING", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
	public string DROPPING
	{
		get
		{
			return this._DROPPING;
		}
		set
		{
			if ((this._DROPPING != value))
			{
				this._DROPPING = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_END_TIME", DbType="VarChar(6)")]
	public string END_TIME
	{
		get
		{
			return this._END_TIME;
		}
		set
		{
			if ((this._END_TIME != value))
			{
				this._END_TIME = value;
			}
		}
	}
}

public partial class proITINERARYInsertResult
{
	
	private int _Column1;
	
	public proITINERARYInsertResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Int NOT NULL")]
	public int Column1
	{
		get
		{
			return this._Column1;
		}
		set
		{
			if ((this._Column1 != value))
			{
				this._Column1 = value;
			}
		}
	}
}

public partial class proGET_LIST_COMPANYResult
{
	
	private string _COMPANY_ID;
	
	private string _COMPANY_NAME;
	
	private string _COMPANY_TEL;
	
	private Byte[] _COMPANY_PICTURE;
	
	public proGET_LIST_COMPANYResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMPANY_ID", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string COMPANY_ID
	{
		get
		{
			return this._COMPANY_ID;
		}
		set
		{
			if ((this._COMPANY_ID != value))
			{
				this._COMPANY_ID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMPANY_NAME", DbType="NVarChar(50)")]
	public string COMPANY_NAME
	{
		get
		{
			return this._COMPANY_NAME;
		}
		set
		{
			if ((this._COMPANY_NAME != value))
			{
				this._COMPANY_NAME = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMPANY_TEL", DbType="NVarChar(12)")]
	public string COMPANY_TEL
	{
		get
		{
			return this._COMPANY_TEL;
		}
		set
		{
			if ((this._COMPANY_TEL != value))
			{
				this._COMPANY_TEL = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMPANY_PICTURE", DbType="Image")]
	public Byte[] COMPANY_PICTURE
	{
		get
		{
			return this._COMPANY_PICTURE;
		}
		set
		{
			if ((this._COMPANY_PICTURE != value))
			{
				this._COMPANY_PICTURE = value;
			}
		}
	}
}

public partial class proTIMETABLEGetTOListResult
{
	
	private string _EMPLOYEE_ID;
	
	private string _LICENSE_PLATE;
	
	private string _COACH_ROUTE_ID;
	
	private string _FINSHED_STATUS;
	
	private string _DEPARTURE_DATE;
	
	public proTIMETABLEGetTOListResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMPLOYEE_ID", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string EMPLOYEE_ID
	{
		get
		{
			return this._EMPLOYEE_ID;
		}
		set
		{
			if ((this._EMPLOYEE_ID != value))
			{
				this._EMPLOYEE_ID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LICENSE_PLATE", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string LICENSE_PLATE
	{
		get
		{
			return this._LICENSE_PLATE;
		}
		set
		{
			if ((this._LICENSE_PLATE != value))
			{
				this._LICENSE_PLATE = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COACH_ROUTE_ID", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string COACH_ROUTE_ID
	{
		get
		{
			return this._COACH_ROUTE_ID;
		}
		set
		{
			if ((this._COACH_ROUTE_ID != value))
			{
				this._COACH_ROUTE_ID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FINSHED_STATUS", DbType="VarChar(20)")]
	public string FINSHED_STATUS
	{
		get
		{
			return this._FINSHED_STATUS;
		}
		set
		{
			if ((this._FINSHED_STATUS != value))
			{
				this._FINSHED_STATUS = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEPARTURE_DATE", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
	public string DEPARTURE_DATE
	{
		get
		{
			return this._DEPARTURE_DATE;
		}
		set
		{
			if ((this._DEPARTURE_DATE != value))
			{
				this._DEPARTURE_DATE = value;
			}
		}
	}
}

public partial class proLOGINForEMPLOYEEResult
{
	
	private int _Column1;
	
	public proLOGINForEMPLOYEEResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Int NOT NULL")]
	public int Column1
	{
		get
		{
			return this._Column1;
		}
		set
		{
			if ((this._Column1 != value))
			{
				this._Column1 = value;
			}
		}
	}
}

public partial class proEMPLOYEEInsertResult
{
	
	private int _Column1;
	
	public proEMPLOYEEInsertResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Int NOT NULL")]
	public int Column1
	{
		get
		{
			return this._Column1;
		}
		set
		{
			if ((this._Column1 != value))
			{
				this._Column1 = value;
			}
		}
	}
}

public partial class proEMPLOYEEListbyCOMPANYResult
{
	
	private string _EMPLOYEE_ID;
	
	private string _EMPLOYEE_NAME;
	
	private string _EMPLOYEE_TEL;
	
	private string _POSITION;
	
	private Byte[] _EMPLOYEE_PICUTURE;
	
	private string _EMPLOYEE_USERNAME;
	
	private string _EMPLOYEE_PASSWORD;
	
	private string _COMPANY_ID;
	
	private string _LICENSE_PLATE;
	
	public proEMPLOYEEListbyCOMPANYResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMPLOYEE_ID", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string EMPLOYEE_ID
	{
		get
		{
			return this._EMPLOYEE_ID;
		}
		set
		{
			if ((this._EMPLOYEE_ID != value))
			{
				this._EMPLOYEE_ID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMPLOYEE_NAME", DbType="NVarChar(50)")]
	public string EMPLOYEE_NAME
	{
		get
		{
			return this._EMPLOYEE_NAME;
		}
		set
		{
			if ((this._EMPLOYEE_NAME != value))
			{
				this._EMPLOYEE_NAME = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMPLOYEE_TEL", DbType="NVarChar(12)")]
	public string EMPLOYEE_TEL
	{
		get
		{
			return this._EMPLOYEE_TEL;
		}
		set
		{
			if ((this._EMPLOYEE_TEL != value))
			{
				this._EMPLOYEE_TEL = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POSITION", DbType="VarChar(20)")]
	public string POSITION
	{
		get
		{
			return this._POSITION;
		}
		set
		{
			if ((this._POSITION != value))
			{
				this._POSITION = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMPLOYEE_PICUTURE", DbType="Image")]
	public Byte[] EMPLOYEE_PICUTURE
	{
		get
		{
			return this._EMPLOYEE_PICUTURE;
		}
		set
		{
			if ((this._EMPLOYEE_PICUTURE != value))
			{
				this._EMPLOYEE_PICUTURE = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMPLOYEE_USERNAME", DbType="NVarChar(20)")]
	public string EMPLOYEE_USERNAME
	{
		get
		{
			return this._EMPLOYEE_USERNAME;
		}
		set
		{
			if ((this._EMPLOYEE_USERNAME != value))
			{
				this._EMPLOYEE_USERNAME = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMPLOYEE_PASSWORD", DbType="NVarChar(16)")]
	public string EMPLOYEE_PASSWORD
	{
		get
		{
			return this._EMPLOYEE_PASSWORD;
		}
		set
		{
			if ((this._EMPLOYEE_PASSWORD != value))
			{
				this._EMPLOYEE_PASSWORD = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMPANY_ID", DbType="NVarChar(10)")]
	public string COMPANY_ID
	{
		get
		{
			return this._COMPANY_ID;
		}
		set
		{
			if ((this._COMPANY_ID != value))
			{
				this._COMPANY_ID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LICENSE_PLATE", DbType="NVarChar(10)")]
	public string LICENSE_PLATE
	{
		get
		{
			return this._LICENSE_PLATE;
		}
		set
		{
			if ((this._LICENSE_PLATE != value))
			{
				this._LICENSE_PLATE = value;
			}
		}
	}
}
#pragma warning restore 1591
